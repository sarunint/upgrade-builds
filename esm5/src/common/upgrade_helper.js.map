{"version":3,"file":"upgrade_helper.js","sourceRoot":"","sources":["../../../../../../packages/upgrade/src/common/upgrade_helper.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef, Injector, SimpleChanges} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {$COMPILE, $CONTROLLER, $HTTP_BACKEND, $INJECTOR, $TEMPLATE_CACHE} from './constants';\nimport {controllerKey, directiveNormalize, isFunction} from './util';\n\n\n// Constants\nconst REQUIRE_PREFIX_RE = /^(\\^\\^?)?(\\?)?(\\^\\^?)?/;\n\n// Interfaces\nexport interface IBindingDestination {\n  [key: string]: any;\n  $onChanges?: (changes: SimpleChanges) => void;\n}\n\nexport interface IControllerInstance extends IBindingDestination {\n  $doCheck?: () => void;\n  $onDestroy?: () => void;\n  $onInit?: () => void;\n  $postLink?: () => void;\n}\n\n// Classes\nexport class UpgradeHelper {\n  public readonly $injector: angular.IInjectorService;\n  public readonly element: Element;\n  public readonly $element: angular.IAugmentedJQuery;\n  public readonly directive: angular.IDirective;\n\n  private readonly $compile: angular.ICompileService;\n  private readonly $controller: angular.IControllerService;\n\n  constructor(\n      private injector: Injector, private name: string, elementRef: ElementRef,\n      directive?: angular.IDirective) {\n    this.$injector = injector.get($INJECTOR);\n    this.$compile = this.$injector.get($COMPILE);\n    this.$controller = this.$injector.get($CONTROLLER);\n\n    this.element = elementRef.nativeElement;\n    this.$element = angular.element(this.element);\n\n    this.directive = directive || UpgradeHelper.getDirective(this.$injector, name);\n  }\n\n  static getDirective($injector: angular.IInjectorService, name: string): angular.IDirective {\n    const directives: angular.IDirective[] = $injector.get(name + 'Directive');\n    if (directives.length > 1) {\n      throw new Error(`Only support single directive definition for: ${name}`);\n    }\n\n    const directive = directives[0];\n\n    // AngularJS will transform `link: xyz` to `compile: () => xyz`. So we can only tell there was a\n    // user-defined `compile` if there is no `link`. In other cases, we will just ignore `compile`.\n    if (directive.compile && !directive.link) notSupported(name, 'compile');\n    if (directive.replace) notSupported(name, 'replace');\n    if (directive.terminal) notSupported(name, 'terminal');\n\n    return directive;\n  }\n\n  static getTemplate(\n      $injector: angular.IInjectorService, directive: angular.IDirective,\n      fetchRemoteTemplate = false): string|Promise<string> {\n    if (directive.template !== undefined) {\n      return getOrCall<string>(directive.template);\n    } else if (directive.templateUrl) {\n      const $templateCache = $injector.get($TEMPLATE_CACHE) as angular.ITemplateCacheService;\n      const url = getOrCall<string>(directive.templateUrl);\n      const template = $templateCache.get(url);\n\n      if (template !== undefined) {\n        return template;\n      } else if (!fetchRemoteTemplate) {\n        throw new Error('loading directive templates asynchronously is not supported');\n      }\n\n      return new Promise((resolve, reject) => {\n        const $httpBackend = $injector.get($HTTP_BACKEND) as angular.IHttpBackendService;\n        $httpBackend('GET', url, null, (status: number, response: string) => {\n          if (status === 200) {\n            resolve($templateCache.put(url, response));\n          } else {\n            reject(`GET component template from '${url}' returned '${status}: ${response}'`);\n          }\n        });\n      });\n    } else {\n      throw new Error(`Directive '${directive.name}' is not a component, it is missing template.`);\n    }\n  }\n\n  buildController(controllerType: angular.IController, $scope: angular.IScope) {\n    // TODO: Document that we do not pre-assign bindings on the controller instance.\n    // Quoted properties below so that this code can be optimized with Closure Compiler.\n    const locals = {'$scope': $scope, '$element': this.$element};\n    const controller = this.$controller(controllerType, locals, null, this.directive.controllerAs);\n\n    this.$element.data !(controllerKey(this.directive.name !), controller);\n\n    return controller;\n  }\n\n  compileTemplate(template?: string): angular.ILinkFn {\n    if (template === undefined) {\n      template = UpgradeHelper.getTemplate(this.$injector, this.directive) as string;\n    }\n\n    return this.compileHtml(template);\n  }\n\n  onDestroy($scope: angular.IScope, controllerInstance?: any) {\n    if (controllerInstance && isFunction(controllerInstance.$onDestroy)) {\n      controllerInstance.$onDestroy();\n    }\n    $scope.$destroy();\n\n    // Clean the jQuery/jqLite data on the component+child elements.\n    // Equivelent to how jQuery/jqLite invoke `cleanData` on an Element (this.element)\n    //  https://github.com/jquery/jquery/blob/e743cbd28553267f955f71ea7248377915613fd9/src/manipulation.js#L223\n    //  https://github.com/angular/angular.js/blob/26ddc5f830f902a3d22f4b2aab70d86d4d688c82/src/jqLite.js#L306-L312\n    // `cleanData` will invoke the AngularJS `$destroy` DOM event\n    //  https://github.com/angular/angular.js/blob/26ddc5f830f902a3d22f4b2aab70d86d4d688c82/src/Angular.js#L1911-L1924\n    angular.element.cleanData([this.element]);\n    angular.element.cleanData(this.element.querySelectorAll('*'));\n  }\n\n  prepareTransclusion(): angular.ILinkFn|undefined {\n    const transclude = this.directive.transclude;\n    const contentChildNodes = this.extractChildNodes();\n    const attachChildrenFn: angular.ILinkFn = (scope, cloneAttachFn) => {\n      // Since AngularJS v1.5.8, `cloneAttachFn` will try to destroy the transclusion scope if\n      // `$template` is empty. Since the transcluded content comes from Angular, not AngularJS,\n      // there will be no transclusion scope here.\n      // Provide a dummy `scope.$destroy()` method to prevent `cloneAttachFn` from throwing.\n      scope = scope || {$destroy: () => undefined};\n      return cloneAttachFn !($template, scope);\n    };\n    let $template = contentChildNodes;\n\n    if (transclude) {\n      const slots = Object.create(null);\n\n      if (typeof transclude === 'object') {\n        $template = [];\n\n        const slotMap = Object.create(null);\n        const filledSlots = Object.create(null);\n\n        // Parse the element selectors.\n        Object.keys(transclude).forEach(slotName => {\n          let selector = transclude[slotName];\n          const optional = selector.charAt(0) === '?';\n          selector = optional ? selector.substring(1) : selector;\n\n          slotMap[selector] = slotName;\n          slots[slotName] = null;            // `null`: Defined but not yet filled.\n          filledSlots[slotName] = optional;  // Consider optional slots as filled.\n        });\n\n        // Add the matching elements into their slot.\n        contentChildNodes.forEach(node => {\n          const slotName = slotMap[directiveNormalize(node.nodeName.toLowerCase())];\n          if (slotName) {\n            filledSlots[slotName] = true;\n            slots[slotName] = slots[slotName] || [];\n            slots[slotName].push(node);\n          } else {\n            $template.push(node);\n          }\n        });\n\n        // Check for required slots that were not filled.\n        Object.keys(filledSlots).forEach(slotName => {\n          if (!filledSlots[slotName]) {\n            throw new Error(`Required transclusion slot '${slotName}' on directive: ${this.name}`);\n          }\n        });\n\n        Object.keys(slots).filter(slotName => slots[slotName]).forEach(slotName => {\n          const nodes = slots[slotName];\n          slots[slotName] = (scope: angular.IScope, cloneAttach: angular.ICloneAttachFunction) =>\n              cloneAttach !(nodes, scope);\n        });\n      }\n\n      // Attach `$$slots` to default slot transclude fn.\n      attachChildrenFn.$$slots = slots;\n\n      // AngularJS v1.6+ ignores empty or whitespace-only transcluded text nodes. But Angular\n      // removes all text content after the first interpolation and updates it later, after\n      // evaluating the expressions. This would result in AngularJS failing to recognize text\n      // nodes that start with an interpolation as transcluded content and use the fallback\n      // content instead.\n      // To avoid this issue, we add a\n      // [zero-width non-joiner character](https://en.wikipedia.org/wiki/Zero-width_non-joiner)\n      // to empty text nodes (which can only be a result of Angular removing their initial content).\n      // NOTE: Transcluded text content that starts with whitespace followed by an interpolation\n      //       will still fail to be detected by AngularJS v1.6+\n      $template.forEach(node => {\n        if (node.nodeType === Node.TEXT_NODE && !node.nodeValue) {\n          node.nodeValue = '\\u200C';\n        }\n      });\n    }\n\n    return attachChildrenFn;\n  }\n\n  resolveAndBindRequiredControllers(controllerInstance: IControllerInstance|null) {\n    const directiveRequire = this.getDirectiveRequire();\n    const requiredControllers = this.resolveRequire(directiveRequire);\n\n    if (controllerInstance && this.directive.bindToController && isMap(directiveRequire)) {\n      const requiredControllersMap = requiredControllers as{[key: string]: IControllerInstance};\n      Object.keys(requiredControllersMap).forEach(key => {\n        controllerInstance[key] = requiredControllersMap[key];\n      });\n    }\n\n    return requiredControllers;\n  }\n\n  private compileHtml(html: string): angular.ILinkFn {\n    this.element.innerHTML = html;\n    return this.$compile(this.element.childNodes);\n  }\n\n  private extractChildNodes(): Node[] {\n    const childNodes: Node[] = [];\n    let childNode: Node|null;\n\n    while (childNode = this.element.firstChild) {\n      this.element.removeChild(childNode);\n      childNodes.push(childNode);\n    }\n\n    return childNodes;\n  }\n\n  private getDirectiveRequire(): angular.DirectiveRequireProperty {\n    const require = this.directive.require || (this.directive.controller && this.directive.name) !;\n\n    if (isMap(require)) {\n      Object.keys(require).forEach(key => {\n        const value = require[key];\n        const match = value.match(REQUIRE_PREFIX_RE) !;\n        const name = value.substring(match[0].length);\n\n        if (!name) {\n          require[key] = match[0] + key;\n        }\n      });\n    }\n\n    return require;\n  }\n\n  private resolveRequire(require: angular.DirectiveRequireProperty, controllerInstance?: any):\n      angular.SingleOrListOrMap<IControllerInstance>|null {\n    if (!require) {\n      return null;\n    } else if (Array.isArray(require)) {\n      return require.map(req => this.resolveRequire(req));\n    } else if (typeof require === 'object') {\n      const value: {[key: string]: IControllerInstance} = {};\n      Object.keys(require).forEach(key => value[key] = this.resolveRequire(require[key]) !);\n      return value;\n    } else if (typeof require === 'string') {\n      const match = require.match(REQUIRE_PREFIX_RE) !;\n      const inheritType = match[1] || match[3];\n\n      const name = require.substring(match[0].length);\n      const isOptional = !!match[2];\n      const searchParents = !!inheritType;\n      const startOnParent = inheritType === '^^';\n\n      const ctrlKey = controllerKey(name);\n      const elem = startOnParent ? this.$element.parent !() : this.$element;\n      const value = searchParents ? elem.inheritedData !(ctrlKey) : elem.data !(ctrlKey);\n\n      if (!value && !isOptional) {\n        throw new Error(\n            `Unable to find required '${require}' in upgraded directive '${this.name}'.`);\n      }\n\n      return value;\n    } else {\n      throw new Error(\n          `Unrecognized 'require' syntax on upgraded directive '${this.name}': ${require}`);\n    }\n  }\n}\n\nfunction getOrCall<T>(property: T | Function): T {\n  return isFunction(property) ? property() : property;\n}\n\n// NOTE: Only works for `typeof T !== 'object'`.\nfunction isMap<T>(value: angular.SingleOrListOrMap<T>): value is {[key: string]: T} {\n  return value && !Array.isArray(value) && typeof value === 'object';\n}\n\nfunction notSupported(name: string, feature: string) {\n  throw new Error(`Upgraded directive '${name}' contains unsupported feature: '${feature}'.`);\n}\n"]}