{"version":3,"file":"static.js","sources":["../../../packages/upgrade/esm5/static/src/common/angular1.js","../../../packages/upgrade/esm5/static/src/common/constants.js","../../../packages/upgrade/esm5/static/src/common/component_info.js","../../../packages/upgrade/esm5/static/src/common/util.js","../../../packages/upgrade/esm5/static/src/common/downgrade_component_adapter.js","../../../packages/upgrade/esm5/static/src/common/downgrade_component.js","../../../packages/upgrade/esm5/static/src/common/downgrade_injectable.js","../../../packages/upgrade/esm5/static/src/common/version.js","../../../packages/upgrade/esm5/static/src/static/angular1_providers.js","../../../packages/upgrade/esm5/static/src/static/util.js","../../../packages/upgrade/esm5/static/src/static/downgrade_module.js","../../../packages/upgrade/esm5/static/src/common/upgrade_helper.js","../../../packages/upgrade/esm5/static/src/static/upgrade_component.js","../../../packages/upgrade/esm5/static/src/static/upgrade_module.js","../../../packages/upgrade/esm5/static/public_api.js","../../../packages/upgrade/esm5/static/static.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @typedef {?} */\nvar Ng1Token;\nexport { Ng1Token };\n/** @typedef {?} */\nvar Ng1Expression;\nexport { Ng1Expression };\n/**\n * @record\n */\nexport function IAnnotatedFunction() { }\n/** @type {?|undefined} */\nIAnnotatedFunction.prototype.$inject;\n/** @typedef {?} */\nvar IInjectable;\nexport { IInjectable };\n/** @typedef {?} */\nvar SingleOrListOrMap;\nexport { SingleOrListOrMap };\n/**\n * @record\n */\nexport function IModule() { }\n/** @type {?} */\nIModule.prototype.name;\n/** @type {?} */\nIModule.prototype.requires;\n/** @type {?} */\nIModule.prototype.config;\n/** @type {?} */\nIModule.prototype.directive;\n/** @type {?} */\nIModule.prototype.component;\n/** @type {?} */\nIModule.prototype.controller;\n/** @type {?} */\nIModule.prototype.factory;\n/** @type {?} */\nIModule.prototype.value;\n/** @type {?} */\nIModule.prototype.constant;\n/** @type {?} */\nIModule.prototype.run;\n/**\n * @record\n */\nexport function ICompileService() { }\n/**\n * @record\n */\nexport function ILinkFn() { }\n/* TODO: handle strange member:\n(scope: IScope, cloneAttachFn?: ICloneAttachFunction, options?: ILinkFnOptions): IAugmentedJQuery;\n*/\n/** @type {?|undefined} */\nILinkFn.prototype.$$slots;\n/**\n * @record\n */\nexport function ILinkFnOptions() { }\n/** @type {?|undefined} */\nILinkFnOptions.prototype.parentBoundTranscludeFn;\n/** @type {?|undefined} */\nILinkFnOptions.prototype.transcludeControllers;\n/** @type {?|undefined} */\nILinkFnOptions.prototype.futureParentElement;\n/**\n * @record\n */\nexport function IRootScopeService() { }\n/** @type {?} */\nIRootScopeService.prototype.$new;\n/** @type {?} */\nIRootScopeService.prototype.$id;\n/** @type {?} */\nIRootScopeService.prototype.$parent;\n/** @type {?} */\nIRootScopeService.prototype.$root;\n/** @type {?} */\nIRootScopeService.prototype.$watch;\n/** @type {?} */\nIRootScopeService.prototype.$on;\n/** @type {?} */\nIRootScopeService.prototype.$destroy;\n/** @type {?} */\nIRootScopeService.prototype.$apply;\n/** @type {?} */\nIRootScopeService.prototype.$digest;\n/** @type {?} */\nIRootScopeService.prototype.$evalAsync;\n/** @type {?} */\nIRootScopeService.prototype.$on;\n/** @type {?} */\nIRootScopeService.prototype.$$childTail;\n/** @type {?} */\nIRootScopeService.prototype.$$childHead;\n/** @type {?} */\nIRootScopeService.prototype.$$nextSibling;\n/**\n * @record\n */\nexport function IScope() { }\n/**\n * @record\n */\nexport function IAngularBootstrapConfig() { }\n/** @type {?|undefined} */\nIAngularBootstrapConfig.prototype.strictDi;\n/**\n * @record\n */\nexport function IDirective() { }\n/** @type {?|undefined} */\nIDirective.prototype.compile;\n/** @type {?|undefined} */\nIDirective.prototype.controller;\n/** @type {?|undefined} */\nIDirective.prototype.controllerAs;\n/** @type {?|undefined} */\nIDirective.prototype.bindToController;\n/** @type {?|undefined} */\nIDirective.prototype.link;\n/** @type {?|undefined} */\nIDirective.prototype.name;\n/** @type {?|undefined} */\nIDirective.prototype.priority;\n/** @type {?|undefined} */\nIDirective.prototype.replace;\n/** @type {?|undefined} */\nIDirective.prototype.require;\n/** @type {?|undefined} */\nIDirective.prototype.restrict;\n/** @type {?|undefined} */\nIDirective.prototype.scope;\n/** @type {?|undefined} */\nIDirective.prototype.template;\n/** @type {?|undefined} */\nIDirective.prototype.templateUrl;\n/** @type {?|undefined} */\nIDirective.prototype.templateNamespace;\n/** @type {?|undefined} */\nIDirective.prototype.terminal;\n/** @type {?|undefined} */\nIDirective.prototype.transclude;\n/** @typedef {?} */\nvar DirectiveRequireProperty;\nexport { DirectiveRequireProperty };\n/** @typedef {?} */\nvar DirectiveTranscludeProperty;\nexport { DirectiveTranscludeProperty };\n/**\n * @record\n */\nexport function IDirectiveCompileFn() { }\n/**\n * @record\n */\nexport function IDirectivePrePost() { }\n/** @type {?|undefined} */\nIDirectivePrePost.prototype.pre;\n/** @type {?|undefined} */\nIDirectivePrePost.prototype.post;\n/**\n * @record\n */\nexport function IDirectiveLinkFn() { }\n/**\n * @record\n */\nexport function IComponent() { }\n/** @type {?|undefined} */\nIComponent.prototype.bindings;\n/** @type {?|undefined} */\nIComponent.prototype.controller;\n/** @type {?|undefined} */\nIComponent.prototype.controllerAs;\n/** @type {?|undefined} */\nIComponent.prototype.require;\n/** @type {?|undefined} */\nIComponent.prototype.template;\n/** @type {?|undefined} */\nIComponent.prototype.templateUrl;\n/** @type {?|undefined} */\nIComponent.prototype.transclude;\n/**\n * @record\n */\nexport function IAttributes() { }\n/** @type {?} */\nIAttributes.prototype.$observe;\n/**\n * @record\n */\nexport function ITranscludeFunction() { }\n/**\n * @record\n */\nexport function ICloneAttachFunction() { }\n/** @typedef {?} */\nvar IAugmentedJQuery;\nexport { IAugmentedJQuery };\n/**\n * @record\n */\nexport function IProvider() { }\n/** @type {?} */\nIProvider.prototype.$get;\n/**\n * @record\n */\nexport function IProvideService() { }\n/** @type {?} */\nIProvideService.prototype.provider;\n/** @type {?} */\nIProvideService.prototype.factory;\n/** @type {?} */\nIProvideService.prototype.service;\n/** @type {?} */\nIProvideService.prototype.value;\n/** @type {?} */\nIProvideService.prototype.constant;\n/** @type {?} */\nIProvideService.prototype.decorator;\n/**\n * @record\n */\nexport function IParseService() { }\n/**\n * @record\n */\nexport function ICompiledExpression() { }\n/* TODO: handle strange member:\n(context: any, locals: any): any;\n*/\n/** @type {?|undefined} */\nICompiledExpression.prototype.assign;\n/**\n * @record\n */\nexport function IHttpBackendService() { }\n/**\n * @record\n */\nexport function ICacheObject() { }\n/** @type {?} */\nICacheObject.prototype.put;\n/** @type {?} */\nICacheObject.prototype.get;\n/**\n * @record\n */\nexport function ITemplateCacheService() { }\n/**\n * @record\n */\nexport function ITemplateRequestService() { }\n/* TODO: handle strange member:\n(template: string|any __ TrustedResourceUrl __, ignoreRequestError?: boolean): Promise<string>;\n*/\n/** @type {?} */\nITemplateRequestService.prototype.totalPendingRequests;\n/** @typedef {?} */\nvar IController;\nexport { IController };\n/**\n * @record\n */\nexport function IControllerService() { }\n/**\n * @record\n */\nexport function IInjectorService() { }\n/** @type {?} */\nIInjectorService.prototype.get;\n/** @type {?} */\nIInjectorService.prototype.has;\n/**\n * @record\n */\nexport function IIntervalService() { }\n/* TODO: handle strange member:\n(func: Function, delay: number, count?: number, invokeApply?: boolean,\n   ...args: any[]): Promise<any>;\n*/\n/** @type {?} */\nIIntervalService.prototype.cancel;\n/**\n * @record\n */\nexport function ITestabilityService() { }\n/** @type {?} */\nITestabilityService.prototype.findBindings;\n/** @type {?} */\nITestabilityService.prototype.findModels;\n/** @type {?} */\nITestabilityService.prototype.getLocation;\n/** @type {?} */\nITestabilityService.prototype.setLocation;\n/** @type {?} */\nITestabilityService.prototype.whenStable;\n/**\n * @record\n */\nexport function INgModelController() { }\n/** @type {?} */\nINgModelController.prototype.$render;\n/** @type {?} */\nINgModelController.prototype.$isEmpty;\n/** @type {?} */\nINgModelController.prototype.$setValidity;\n/** @type {?} */\nINgModelController.prototype.$setPristine;\n/** @type {?} */\nINgModelController.prototype.$setDirty;\n/** @type {?} */\nINgModelController.prototype.$setUntouched;\n/** @type {?} */\nINgModelController.prototype.$setTouched;\n/** @type {?} */\nINgModelController.prototype.$rollbackViewValue;\n/** @type {?} */\nINgModelController.prototype.$validate;\n/** @type {?} */\nINgModelController.prototype.$commitViewValue;\n/** @type {?} */\nINgModelController.prototype.$setViewValue;\n/** @type {?} */\nINgModelController.prototype.$viewValue;\n/** @type {?} */\nINgModelController.prototype.$modelValue;\n/** @type {?} */\nINgModelController.prototype.$parsers;\n/** @type {?} */\nINgModelController.prototype.$formatters;\n/** @type {?} */\nINgModelController.prototype.$validators;\n/** @type {?} */\nINgModelController.prototype.$asyncValidators;\n/** @type {?} */\nINgModelController.prototype.$viewChangeListeners;\n/** @type {?} */\nINgModelController.prototype.$error;\n/** @type {?} */\nINgModelController.prototype.$pending;\n/** @type {?} */\nINgModelController.prototype.$untouched;\n/** @type {?} */\nINgModelController.prototype.$touched;\n/** @type {?} */\nINgModelController.prototype.$pristine;\n/** @type {?} */\nINgModelController.prototype.$dirty;\n/** @type {?} */\nINgModelController.prototype.$valid;\n/** @type {?} */\nINgModelController.prototype.$invalid;\n/** @type {?} */\nINgModelController.prototype.$name;\n/**\n * @return {?}\n */\nfunction noNg() {\n    throw new Error('AngularJS v1.x is not loaded!');\n}\nvar ɵ0 = function () { return noNg(); };\n/** @type {?} */\nvar noNgElement = /** @type {?} */ ((ɵ0));\nnoNgElement.cleanData = noNg;\n/** @type {?} */\nvar angular = {\n    bootstrap: noNg,\n    module: noNg,\n    element: noNgElement,\n    version: /** @type {?} */ (undefined),\n    resumeBootstrap: noNg,\n    getTestability: noNg\n};\ntry {\n    if (window.hasOwnProperty('angular')) {\n        angular = (/** @type {?} */ (window)).angular;\n    }\n}\ncatch (e) {\n    // ignore in CJS mode.\n}\n/**\n * @deprecated Use `setAngularJSGlobal` instead.\n *\n * \\@publicApi\n * @param {?} ng\n * @return {?}\n */\nexport function setAngularLib(ng) {\n    setAngularJSGlobal(ng);\n}\n/**\n * @deprecated Use `getAngularJSGlobal` instead.\n *\n * \\@publicApi\n * @return {?}\n */\nexport function getAngularLib() {\n    return getAngularJSGlobal();\n}\n/**\n * Resets the AngularJS global.\n *\n * Used when AngularJS is loaded lazily, and not available on `window`.\n *\n * \\@publicApi\n * @param {?} ng\n * @return {?}\n */\nexport function setAngularJSGlobal(ng) {\n    angular = ng;\n    version = ng && ng.version;\n}\n/**\n * Returns the current AngularJS global.\n *\n * \\@publicApi\n * @return {?}\n */\nexport function getAngularJSGlobal() {\n    return angular;\n}\n/** @type {?} */\nexport var bootstrap = function (e, modules, config) {\n    return angular.bootstrap(e, modules, config);\n};\n/** @type {?} */\nexport var module = function (prefix, dependencies) {\n    return angular.module(prefix, dependencies);\n};\n/** @type {?} */\nexport var element = /** @type {?} */ ((function (e) { return angular.element(e); }));\nelement.cleanData = function (nodes) { return angular.element.cleanData(nodes); };\n/** @type {?} */\nexport var resumeBootstrap = function () { return angular.resumeBootstrap(); };\n/** @type {?} */\nexport var getTestability = function (e) { return angular.getTestability(e); };\n/** @type {?} */\nexport var version = angular.version;\nexport { ɵ0 };\n//# sourceMappingURL=angular1.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nexport var $COMPILE = '$compile';\n/** @type {?} */\nexport var $CONTROLLER = '$controller';\n/** @type {?} */\nexport var $DELEGATE = '$delegate';\n/** @type {?} */\nexport var $EXCEPTION_HANDLER = '$exceptionHandler';\n/** @type {?} */\nexport var $HTTP_BACKEND = '$httpBackend';\n/** @type {?} */\nexport var $INJECTOR = '$injector';\n/** @type {?} */\nexport var $INTERVAL = '$interval';\n/** @type {?} */\nexport var $PARSE = '$parse';\n/** @type {?} */\nexport var $PROVIDE = '$provide';\n/** @type {?} */\nexport var $ROOT_SCOPE = '$rootScope';\n/** @type {?} */\nexport var $SCOPE = '$scope';\n/** @type {?} */\nexport var $TEMPLATE_CACHE = '$templateCache';\n/** @type {?} */\nexport var $TEMPLATE_REQUEST = '$templateRequest';\n/** @type {?} */\nexport var $$TESTABILITY = '$$testability';\n/** @type {?} */\nexport var COMPILER_KEY = '$$angularCompiler';\n/** @type {?} */\nexport var DOWNGRADED_MODULE_COUNT_KEY = '$$angularDowngradedModuleCount';\n/** @type {?} */\nexport var GROUP_PROJECTABLE_NODES_KEY = '$$angularGroupProjectableNodes';\n/** @type {?} */\nexport var INJECTOR_KEY = '$$angularInjector';\n/** @type {?} */\nexport var LAZY_MODULE_REF = '$$angularLazyModuleRef';\n/** @type {?} */\nexport var NG_ZONE_KEY = '$$angularNgZone';\n/** @type {?} */\nexport var UPGRADE_APP_TYPE_KEY = '$$angularUpgradeAppType';\n/** @type {?} */\nexport var REQUIRE_INJECTOR = '?^^' + INJECTOR_KEY;\n/** @type {?} */\nexport var REQUIRE_NG_MODEL = '?ngModel';\n/** @type {?} */\nexport var UPGRADE_MODULE_NAME = '$$UpgradeModule';\n//# sourceMappingURL=constants.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nvar /**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nPropertyBinding = /** @class */ (function () {\n    function PropertyBinding(prop, attr) {\n        this.prop = prop;\n        this.attr = attr;\n        this.parseBinding();\n    }\n    /**\n     * @return {?}\n     */\n    PropertyBinding.prototype.parseBinding = /**\n     * @return {?}\n     */\n    function () {\n        this.bracketAttr = \"[\" + this.attr + \"]\";\n        this.parenAttr = \"(\" + this.attr + \")\";\n        this.bracketParenAttr = \"[(\" + this.attr + \")]\";\n        /** @type {?} */\n        var capitalAttr = this.attr.charAt(0).toUpperCase() + this.attr.substr(1);\n        this.onAttr = \"on\" + capitalAttr;\n        this.bindAttr = \"bind\" + capitalAttr;\n        this.bindonAttr = \"bindon\" + capitalAttr;\n    };\n    return PropertyBinding;\n}());\n/**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nexport { PropertyBinding };\nif (false) {\n    /** @type {?} */\n    PropertyBinding.prototype.bracketAttr;\n    /** @type {?} */\n    PropertyBinding.prototype.bracketParenAttr;\n    /** @type {?} */\n    PropertyBinding.prototype.parenAttr;\n    /** @type {?} */\n    PropertyBinding.prototype.onAttr;\n    /** @type {?} */\n    PropertyBinding.prototype.bindAttr;\n    /** @type {?} */\n    PropertyBinding.prototype.bindonAttr;\n    /** @type {?} */\n    PropertyBinding.prototype.prop;\n    /** @type {?} */\n    PropertyBinding.prototype.attr;\n}\n//# sourceMappingURL=component_info.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOWNGRADED_MODULE_COUNT_KEY, UPGRADE_APP_TYPE_KEY } from './constants';\n/** @type {?} */\nvar DIRECTIVE_PREFIX_REGEXP = /^(?:x|data)[:\\-_]/i;\n/** @type {?} */\nvar DIRECTIVE_SPECIAL_CHARS_REGEXP = /[:\\-_]+(.)/g;\n/**\n * @param {?} e\n * @return {?}\n */\nexport function onError(e) {\n    // TODO: (misko): We seem to not have a stack trace here!\n    if (console.error) {\n        console.error(e, e.stack);\n    }\n    else {\n        // tslint:disable-next-line:no-console\n        console.log(e, e.stack);\n    }\n    throw e;\n}\n/**\n * @param {?} name\n * @return {?}\n */\nexport function controllerKey(name) {\n    return '$' + name + 'Controller';\n}\n/**\n * @param {?} name\n * @return {?}\n */\nexport function directiveNormalize(name) {\n    return name.replace(DIRECTIVE_PREFIX_REGEXP, '')\n        .replace(DIRECTIVE_SPECIAL_CHARS_REGEXP, function (_, letter) { return letter.toUpperCase(); });\n}\n/**\n * @param {?} type\n * @return {?}\n */\nexport function getTypeName(type) {\n    // Return the name of the type or the first line of its stringified version.\n    return (/** @type {?} */ (type)).overriddenName || type.name || type.toString().split('\\n')[0];\n}\n/**\n * @param {?} $injector\n * @return {?}\n */\nexport function getDowngradedModuleCount($injector) {\n    return $injector.has(DOWNGRADED_MODULE_COUNT_KEY) ? $injector.get(DOWNGRADED_MODULE_COUNT_KEY) :\n        0;\n}\n/**\n * @param {?} $injector\n * @return {?}\n */\nexport function getUpgradeAppType($injector) {\n    return $injector.has(UPGRADE_APP_TYPE_KEY) ? $injector.get(UPGRADE_APP_TYPE_KEY) :\n        0 /* None */;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isFunction(value) {\n    return typeof value === 'function';\n}\n/**\n * @param {?} $injector\n * @param {?} downgradedModule\n * @param {?} injectionKey\n * @param {?} attemptedAction\n * @return {?}\n */\nexport function validateInjectionKey($injector, downgradedModule, injectionKey, attemptedAction) {\n    /** @type {?} */\n    var upgradeAppType = getUpgradeAppType($injector);\n    /** @type {?} */\n    var downgradedModuleCount = getDowngradedModuleCount($injector);\n    // Check for common errors.\n    switch (upgradeAppType) {\n        case 1 /* Dynamic */:\n        case 2 /* Static */:\n            if (downgradedModule) {\n                throw new Error(\"Error while \" + attemptedAction + \": 'downgradedModule' unexpectedly specified.\\n\" +\n                    'You should not specify a value for \\'downgradedModule\\', unless you are downgrading ' +\n                    'more than one Angular module (via \\'downgradeModule()\\').');\n            }\n            break;\n        case 3 /* Lite */:\n            if (!downgradedModule && (downgradedModuleCount >= 2)) {\n                throw new Error(\"Error while \" + attemptedAction + \": 'downgradedModule' not specified.\\n\" +\n                    'This application contains more than one downgraded Angular module, thus you need to ' +\n                    'always specify \\'downgradedModule\\' when downgrading components and injectables.');\n            }\n            if (!$injector.has(injectionKey)) {\n                throw new Error(\"Error while \" + attemptedAction + \": Unable to find the specified downgraded module.\\n\" +\n                    'Did you forget to downgrade an Angular module or include it in the AngularJS ' +\n                    'application?');\n            }\n            break;\n        default:\n            throw new Error(\"Error while \" + attemptedAction + \": Not a valid '@angular/upgrade' application.\\n\" +\n                'Did you forget to downgrade an Angular module or include it in the AngularJS ' +\n                'application?');\n    }\n}\n/**\n * @template R\n */\nvar /**\n * @template R\n */\nDeferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this.promise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    return Deferred;\n}());\n/**\n * @template R\n */\nexport { Deferred };\nif (false) {\n    /** @type {?} */\n    Deferred.prototype.promise;\n    /** @type {?} */\n    Deferred.prototype.resolve;\n    /** @type {?} */\n    Deferred.prototype.reject;\n}\n/**\n * @record\n */\nexport function LazyModuleRef() { }\n/** @type {?} */\nLazyModuleRef.prototype.needsNgZone;\n/** @type {?|undefined} */\nLazyModuleRef.prototype.injector;\n/** @type {?|undefined} */\nLazyModuleRef.prototype.promise;\n/** @enum {number} */\nvar UpgradeAppType = {\n    // App NOT using `@angular/upgrade`. (This should never happen in an `ngUpgrade` app.)\n    None: 0,\n    // App using the deprecated `@angular/upgrade` APIs (a.k.a. dynamic `ngUpgrade`).\n    Dynamic: 1,\n    // App using `@angular/upgrade/static` with `UpgradeModule`.\n    Static: 2,\n    // App using @angular/upgrade/static` with `downgradeModule()` (a.k.a `ngUpgrade`-lite ).\n    Lite: 3,\n};\nexport { UpgradeAppType };\n/**\n * @param {?} component\n * @return {?} Whether the passed-in component implements the subset of the\n *     `ControlValueAccessor` interface needed for AngularJS `ng-model`\n *     compatibility.\n */\nfunction supportsNgModel(component) {\n    return typeof component.writeValue === 'function' &&\n        typeof component.registerOnChange === 'function';\n}\n/**\n * Glue the AngularJS `NgModelController` (if it exists) to the component\n * (if it implements the needed subset of the `ControlValueAccessor` interface).\n * @param {?} ngModel\n * @param {?} component\n * @return {?}\n */\nexport function hookupNgModel(ngModel, component) {\n    if (ngModel && supportsNgModel(component)) {\n        ngModel.$render = function () { component.writeValue(ngModel.$viewValue); };\n        component.registerOnChange(ngModel.$setViewValue.bind(ngModel));\n        if (typeof component.registerOnTouched === 'function') {\n            component.registerOnTouched(ngModel.$setTouched.bind(ngModel));\n        }\n    }\n}\n/**\n * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n * @param {?} val1\n * @param {?} val2\n * @return {?}\n */\nexport function strictEquals(val1, val2) {\n    return val1 === val2 || (val1 !== val1 && val2 !== val2);\n}\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ApplicationRef, ChangeDetectorRef, Injector, SimpleChange, Testability, TestabilityRegistry } from '@angular/core';\nimport { PropertyBinding } from './component_info';\nimport { $SCOPE } from './constants';\nimport { getTypeName, hookupNgModel, strictEquals } from './util';\n/** @type {?} */\nvar INITIAL_VALUE = {\n    __UNINITIALIZED__: true\n};\nvar DowngradeComponentAdapter = /** @class */ (function () {\n    function DowngradeComponentAdapter(element, attrs, scope, ngModel, parentInjector, $injector, $compile, $parse, componentFactory, wrapCallback) {\n        this.element = element;\n        this.attrs = attrs;\n        this.scope = scope;\n        this.ngModel = ngModel;\n        this.parentInjector = parentInjector;\n        this.$injector = $injector;\n        this.$compile = $compile;\n        this.$parse = $parse;\n        this.componentFactory = componentFactory;\n        this.wrapCallback = wrapCallback;\n        this.implementsOnChanges = false;\n        this.inputChangeCount = 0;\n        this.inputChanges = {};\n        this.componentScope = scope.$new();\n    }\n    /**\n     * @return {?}\n     */\n    DowngradeComponentAdapter.prototype.compileContents = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var compiledProjectableNodes = [];\n        /** @type {?} */\n        var projectableNodes = this.groupProjectableNodes();\n        /** @type {?} */\n        var linkFns = projectableNodes.map(function (nodes) { return _this.$compile(nodes); }); /** @type {?} */\n        ((this.element.empty))();\n        linkFns.forEach(function (linkFn) {\n            linkFn(_this.scope, function (clone) {\n                compiledProjectableNodes.push(clone); /** @type {?} */\n                ((_this.element.append))(clone);\n            });\n        });\n        return compiledProjectableNodes;\n    };\n    /**\n     * @param {?} projectableNodes\n     * @return {?}\n     */\n    DowngradeComponentAdapter.prototype.createComponent = /**\n     * @param {?} projectableNodes\n     * @return {?}\n     */\n    function (projectableNodes) {\n        /** @type {?} */\n        var providers = [{ provide: $SCOPE, useValue: this.componentScope }];\n        /** @type {?} */\n        var childInjector = Injector.create({ providers: providers, parent: this.parentInjector, name: 'DowngradeComponentAdapter' });\n        this.componentRef =\n            this.componentFactory.create(childInjector, projectableNodes, this.element[0]);\n        this.viewChangeDetector = this.componentRef.injector.get(ChangeDetectorRef);\n        this.changeDetector = this.componentRef.changeDetectorRef;\n        this.component = this.componentRef.instance;\n        /** @type {?} */\n        var testability = this.componentRef.injector.get(Testability, null);\n        if (testability) {\n            this.componentRef.injector.get(TestabilityRegistry)\n                .registerApplication(this.componentRef.location.nativeElement, testability);\n        }\n        hookupNgModel(this.ngModel, this.component);\n    };\n    /**\n     * @param {?} needsNgZone\n     * @param {?=} propagateDigest\n     * @return {?}\n     */\n    DowngradeComponentAdapter.prototype.setupInputs = /**\n     * @param {?} needsNgZone\n     * @param {?=} propagateDigest\n     * @return {?}\n     */\n    function (needsNgZone, propagateDigest) {\n        var _this = this;\n        if (propagateDigest === void 0) { propagateDigest = true; }\n        /** @type {?} */\n        var attrs = this.attrs;\n        /** @type {?} */\n        var inputs = this.componentFactory.inputs || [];\n        var _loop_1 = function (i) {\n            /** @type {?} */\n            var input = new PropertyBinding(inputs[i].propName, inputs[i].templateName);\n            /** @type {?} */\n            var expr = null;\n            if (attrs.hasOwnProperty(input.attr)) {\n                /** @type {?} */\n                var observeFn_1 = (function (prop) {\n                    /** @type {?} */\n                    var prevValue = INITIAL_VALUE;\n                    return function (currValue) {\n                        // Initially, both `$observe()` and `$watch()` will call this function.\n                        if (!strictEquals(prevValue, currValue)) {\n                            if (prevValue === INITIAL_VALUE) {\n                                prevValue = currValue;\n                            }\n                            _this.updateInput(prop, prevValue, currValue);\n                            prevValue = currValue;\n                        }\n                    };\n                })(input.prop);\n                attrs.$observe(input.attr, observeFn_1);\n                /** @type {?} */\n                var unwatch_1 = this_1.componentScope.$watch(function () {\n                    /** @type {?} */ ((unwatch_1))();\n                    unwatch_1 = null;\n                    observeFn_1(attrs[input.attr]);\n                });\n            }\n            else if (attrs.hasOwnProperty(input.bindAttr)) {\n                expr = attrs[input.bindAttr];\n            }\n            else if (attrs.hasOwnProperty(input.bracketAttr)) {\n                expr = attrs[input.bracketAttr];\n            }\n            else if (attrs.hasOwnProperty(input.bindonAttr)) {\n                expr = attrs[input.bindonAttr];\n            }\n            else if (attrs.hasOwnProperty(input.bracketParenAttr)) {\n                expr = attrs[input.bracketParenAttr];\n            }\n            if (expr != null) {\n                /** @type {?} */\n                var watchFn = (function (prop) { return function (currValue, prevValue) {\n                    return _this.updateInput(prop, prevValue, currValue);\n                }; })(input.prop);\n                this_1.componentScope.$watch(expr, watchFn);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < inputs.length; i++) {\n            _loop_1(i);\n        }\n        /** @type {?} */\n        var detectChanges = function () { return _this.changeDetector.detectChanges(); };\n        /** @type {?} */\n        var prototype = this.componentFactory.componentType.prototype;\n        this.implementsOnChanges = !!(prototype && (/** @type {?} */ (prototype)).ngOnChanges);\n        this.componentScope.$watch(function () { return _this.inputChangeCount; }, this.wrapCallback(function () {\n            // Invoke `ngOnChanges()`\n            if (_this.implementsOnChanges) {\n                /** @type {?} */\n                var inputChanges = _this.inputChanges;\n                _this.inputChanges = {};\n                (/** @type {?} */ (_this.component)).ngOnChanges(/** @type {?} */ ((inputChanges)));\n            }\n            _this.viewChangeDetector.markForCheck();\n            // If opted out of propagating digests, invoke change detection when inputs change.\n            if (!propagateDigest) {\n                detectChanges();\n            }\n        }));\n        // If not opted out of propagating digests, invoke change detection on every digest\n        if (propagateDigest) {\n            this.componentScope.$watch(this.wrapCallback(detectChanges));\n        }\n        // If necessary, attach the view so that it will be dirty-checked.\n        // (Allow time for the initial input values to be set and `ngOnChanges()` to be called.)\n        if (needsNgZone || !propagateDigest) {\n            /** @type {?} */\n            var unwatch_2 = this.componentScope.$watch(function () {\n                /** @type {?} */ ((unwatch_2))();\n                unwatch_2 = null;\n                /** @type {?} */\n                var appRef = _this.parentInjector.get(ApplicationRef);\n                appRef.attachView(_this.componentRef.hostView);\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DowngradeComponentAdapter.prototype.setupOutputs = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var attrs = this.attrs;\n        /** @type {?} */\n        var outputs = this.componentFactory.outputs || [];\n        for (var j = 0; j < outputs.length; j++) {\n            /** @type {?} */\n            var output = new PropertyBinding(outputs[j].propName, outputs[j].templateName);\n            /** @type {?} */\n            var bindonAttr = output.bindonAttr.substring(0, output.bindonAttr.length - 6);\n            /** @type {?} */\n            var bracketParenAttr = \"[(\" + output.bracketParenAttr.substring(2, output.bracketParenAttr.length - 8) + \")]\";\n            // order below is important - first update bindings then evaluate expressions\n            if (attrs.hasOwnProperty(bindonAttr)) {\n                this.subscribeToOutput(output, attrs[bindonAttr], true);\n            }\n            if (attrs.hasOwnProperty(bracketParenAttr)) {\n                this.subscribeToOutput(output, attrs[bracketParenAttr], true);\n            }\n            if (attrs.hasOwnProperty(output.onAttr)) {\n                this.subscribeToOutput(output, attrs[output.onAttr]);\n            }\n            if (attrs.hasOwnProperty(output.parenAttr)) {\n                this.subscribeToOutput(output, attrs[output.parenAttr]);\n            }\n        }\n    };\n    /**\n     * @param {?} output\n     * @param {?} expr\n     * @param {?=} isAssignment\n     * @return {?}\n     */\n    DowngradeComponentAdapter.prototype.subscribeToOutput = /**\n     * @param {?} output\n     * @param {?} expr\n     * @param {?=} isAssignment\n     * @return {?}\n     */\n    function (output, expr, isAssignment) {\n        var _this = this;\n        if (isAssignment === void 0) { isAssignment = false; }\n        /** @type {?} */\n        var getter = this.$parse(expr);\n        /** @type {?} */\n        var setter = getter.assign;\n        if (isAssignment && !setter) {\n            throw new Error(\"Expression '\" + expr + \"' is not assignable!\");\n        }\n        /** @type {?} */\n        var emitter = /** @type {?} */ (this.component[output.prop]);\n        if (emitter) {\n            emitter.subscribe({\n                next: isAssignment ? function (v) { return ((setter))(_this.scope, v); } :\n                    function (v) { return getter(_this.scope, { '$event': v }); }\n            });\n        }\n        else {\n            throw new Error(\"Missing emitter '\" + output.prop + \"' on component '\" + getTypeName(this.componentFactory.componentType) + \"'!\");\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DowngradeComponentAdapter.prototype.registerCleanup = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var destroyComponentRef = this.wrapCallback(function () { return _this.componentRef.destroy(); });\n        /** @type {?} */\n        var destroyed = false; /** @type {?} */\n        ((this.element.on))('$destroy', function () { return _this.componentScope.$destroy(); });\n        this.componentScope.$on('$destroy', function () {\n            if (!destroyed) {\n                destroyed = true;\n                _this.componentRef.injector.get(TestabilityRegistry)\n                    .unregisterApplication(_this.componentRef.location.nativeElement);\n                destroyComponentRef();\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    DowngradeComponentAdapter.prototype.getInjector = /**\n     * @return {?}\n     */\n    function () { return this.componentRef.injector; };\n    /**\n     * @param {?} prop\n     * @param {?} prevValue\n     * @param {?} currValue\n     * @return {?}\n     */\n    DowngradeComponentAdapter.prototype.updateInput = /**\n     * @param {?} prop\n     * @param {?} prevValue\n     * @param {?} currValue\n     * @return {?}\n     */\n    function (prop, prevValue, currValue) {\n        if (this.implementsOnChanges) {\n            this.inputChanges[prop] = new SimpleChange(prevValue, currValue, prevValue === currValue);\n        }\n        this.inputChangeCount++;\n        this.component[prop] = currValue;\n    };\n    /**\n     * @return {?}\n     */\n    DowngradeComponentAdapter.prototype.groupProjectableNodes = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var ngContentSelectors = this.componentFactory.ngContentSelectors;\n        return groupNodesBySelector(ngContentSelectors, /** @type {?} */ ((this.element.contents))());\n    };\n    return DowngradeComponentAdapter;\n}());\nexport { DowngradeComponentAdapter };\nif (false) {\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.implementsOnChanges;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.inputChangeCount;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.inputChanges;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.componentScope;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.componentRef;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.component;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.changeDetector;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.viewChangeDetector;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.element;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.attrs;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.scope;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.ngModel;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.parentInjector;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.$injector;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.$compile;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.$parse;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.componentFactory;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.wrapCallback;\n}\n/**\n * Group a set of DOM nodes into `ngContent` groups, based on the given content selectors.\n * @param {?} ngContentSelectors\n * @param {?} nodes\n * @return {?}\n */\nexport function groupNodesBySelector(ngContentSelectors, nodes) {\n    /** @type {?} */\n    var projectableNodes = [];\n    /** @type {?} */\n    var wildcardNgContentIndex;\n    for (var i = 0, ii = ngContentSelectors.length; i < ii; ++i) {\n        projectableNodes[i] = [];\n    }\n    for (var j = 0, jj = nodes.length; j < jj; ++j) {\n        /** @type {?} */\n        var node = nodes[j];\n        /** @type {?} */\n        var ngContentIndex = findMatchingNgContentIndex(node, ngContentSelectors);\n        if (ngContentIndex != null) {\n            projectableNodes[ngContentIndex].push(node);\n        }\n    }\n    return projectableNodes;\n}\n/**\n * @param {?} element\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction findMatchingNgContentIndex(element, ngContentSelectors) {\n    /** @type {?} */\n    var ngContentIndices = [];\n    /** @type {?} */\n    var wildcardNgContentIndex = -1;\n    for (var i = 0; i < ngContentSelectors.length; i++) {\n        /** @type {?} */\n        var selector = ngContentSelectors[i];\n        if (selector === '*') {\n            wildcardNgContentIndex = i;\n        }\n        else {\n            if (matchesSelector(element, selector)) {\n                ngContentIndices.push(i);\n            }\n        }\n    }\n    ngContentIndices.sort();\n    if (wildcardNgContentIndex !== -1) {\n        ngContentIndices.push(wildcardNgContentIndex);\n    }\n    return ngContentIndices.length ? ngContentIndices[0] : null;\n}\n/** @type {?} */\nvar _matches;\n/**\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nfunction matchesSelector(el, selector) {\n    if (!_matches) {\n        /** @type {?} */\n        var elProto = /** @type {?} */ (Element.prototype);\n        _matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n            elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n    }\n    return el.nodeType === Node.ELEMENT_NODE ? _matches.call(el, selector) : false;\n}\n//# sourceMappingURL=downgrade_component_adapter.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ComponentFactoryResolver, NgZone } from '@angular/core';\nimport { $COMPILE, $INJECTOR, $PARSE, INJECTOR_KEY, LAZY_MODULE_REF, REQUIRE_INJECTOR, REQUIRE_NG_MODEL } from './constants';\nimport { DowngradeComponentAdapter } from './downgrade_component_adapter';\nimport { controllerKey, getTypeName, isFunction, validateInjectionKey } from './util';\n/**\n * @record\n * @template T\n */\nfunction Thenable() { }\n/** @type {?} */\nThenable.prototype.then;\n/**\n * \\@description\n *\n * A helper function that allows an Angular component to be used from AngularJS.\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * This helper function returns a factory function to be used for registering\n * an AngularJS wrapper directive for \"downgrading\" an Angular component.\n *\n * \\@usageNotes\n * ### Examples\n *\n * Let's assume that you have an Angular component called `ng2Heroes` that needs\n * to be made available in AngularJS templates.\n *\n * {\\@example upgrade/static/ts/full/module.ts region=\"ng2-heroes\"}\n *\n * We must create an AngularJS [directive](https://docs.angularjs.org/guide/directive)\n * that will make this Angular component available inside AngularJS templates.\n * The `downgradeComponent()` function returns a factory function that we\n * can use to define the AngularJS directive that wraps the \"downgraded\" component.\n *\n * {\\@example upgrade/static/ts/full/module.ts region=\"ng2-heroes-wrapper\"}\n *\n * \\@publicApi\n * @param {?} info contains information about the Component that is being downgraded:\n *\n * - `component: Type<any>`: The type of the Component that will be downgraded\n * - `downgradedModule?: string`: The name of the downgraded module (if any) that the component\n *   \"belongs to\", as returned by a call to `downgradeModule()`. It is the module, whose\n *   corresponding Angular module will be bootstrapped, when the component needs to be instantiated.\n *   <br />\n *   (This option is only necessary when using `downgradeModule()` to downgrade more than one\n *   Angular module.)\n * - `propagateDigest?: boolean`: Whether to perform {\\@link ChangeDetectorRef#detectChanges\n *   change detection} on the component on every\n *   [$digest](https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest). If set to `false`,\n *   change detection will still be performed when any of the component's inputs changes.\n *   (Default: true)\n *\n * @return {?} a factory function that can be used to register the component in an\n * AngularJS module.\n *\n */\nexport function downgradeComponent(info) {\n    /** @type {?} */\n    var directiveFactory = function ($compile, $injector, $parse) {\n        /** @type {?} */\n        var needsNgZone = false;\n        /** @type {?} */\n        var wrapCallback = function (cb) { return cb; };\n        /** @type {?} */\n        var ngZone;\n        return {\n            restrict: 'E',\n            terminal: true,\n            require: [REQUIRE_INJECTOR, REQUIRE_NG_MODEL],\n            link: function (scope, element, attrs, required) {\n                /** @type {?} */\n                var ngModel = required[1];\n                /** @type {?} */\n                var parentInjector = required[0];\n                /** @type {?} */\n                var ranAsync = false;\n                if (!parentInjector) {\n                    /** @type {?} */\n                    var downgradedModule = info.downgradedModule || '';\n                    /** @type {?} */\n                    var lazyModuleRefKey = \"\" + LAZY_MODULE_REF + downgradedModule;\n                    /** @type {?} */\n                    var attemptedAction = \"instantiating component '\" + getTypeName(info.component) + \"'\";\n                    validateInjectionKey($injector, downgradedModule, lazyModuleRefKey, attemptedAction);\n                    /** @type {?} */\n                    var lazyModuleRef = /** @type {?} */ ($injector.get(lazyModuleRefKey));\n                    needsNgZone = lazyModuleRef.needsNgZone;\n                    parentInjector = lazyModuleRef.injector || /** @type {?} */ (lazyModuleRef.promise);\n                }\n                /** @type {?} */\n                var doDowngrade = function (injector) {\n                    /** @type {?} */\n                    var componentFactoryResolver = injector.get(ComponentFactoryResolver);\n                    /** @type {?} */\n                    var componentFactory = /** @type {?} */ ((componentFactoryResolver.resolveComponentFactory(info.component)));\n                    if (!componentFactory) {\n                        throw new Error(\"Expecting ComponentFactory for: \" + getTypeName(info.component));\n                    }\n                    /** @type {?} */\n                    var injectorPromise = new ParentInjectorPromise(element);\n                    /** @type {?} */\n                    var facade = new DowngradeComponentAdapter(element, attrs, scope, ngModel, injector, $injector, $compile, $parse, componentFactory, wrapCallback);\n                    /** @type {?} */\n                    var projectableNodes = facade.compileContents();\n                    facade.createComponent(projectableNodes);\n                    facade.setupInputs(needsNgZone, info.propagateDigest);\n                    facade.setupOutputs();\n                    facade.registerCleanup();\n                    injectorPromise.resolve(facade.getInjector());\n                    if (ranAsync) {\n                        // If this is run async, it is possible that it is not run inside a\n                        // digest and initial input values will not be detected.\n                        scope.$evalAsync(function () { });\n                    }\n                };\n                /** @type {?} */\n                var downgradeFn = !needsNgZone ? doDowngrade : function (injector) {\n                    if (!ngZone) {\n                        ngZone = injector.get(NgZone);\n                        wrapCallback = function (cb) { return function () {\n                            return NgZone.isInAngularZone() ? cb() : ngZone.run(cb);\n                        }; };\n                    }\n                    wrapCallback(function () { return doDowngrade(injector); })();\n                };\n                if (isThenable(parentInjector)) {\n                    parentInjector.then(downgradeFn);\n                }\n                else {\n                    downgradeFn(parentInjector);\n                }\n                ranAsync = true;\n            }\n        };\n    };\n    // bracket-notation because of closure - see #14441\n    directiveFactory['$inject'] = [$COMPILE, $INJECTOR, $PARSE];\n    return directiveFactory;\n}\n/**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of Angular 1's $compile.\n */\nvar /**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of Angular 1's $compile.\n */\nParentInjectorPromise = /** @class */ (function () {\n    function ParentInjectorPromise(element) {\n        this.element = element;\n        this.injectorKey = controllerKey(INJECTOR_KEY);\n        this.callbacks = [];\n        /** @type {?} */ ((\n        // Store the promise on the element.\n        element.data))(this.injectorKey, this);\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ParentInjectorPromise.prototype.then = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (this.injector) {\n            callback(this.injector);\n        }\n        else {\n            this.callbacks.push(callback);\n        }\n    };\n    /**\n     * @param {?} injector\n     * @return {?}\n     */\n    ParentInjectorPromise.prototype.resolve = /**\n     * @param {?} injector\n     * @return {?}\n     */\n    function (injector) {\n        this.injector = injector; /** @type {?} */\n        ((\n        // Store the real injector on the element.\n        this.element.data))(this.injectorKey, injector);\n        // Release the element to prevent memory leaks.\n        this.element = /** @type {?} */ ((null));\n        // Run the queued callbacks.\n        this.callbacks.forEach(function (callback) { return callback(injector); });\n        this.callbacks.length = 0;\n    };\n    return ParentInjectorPromise;\n}());\nif (false) {\n    /** @type {?} */\n    ParentInjectorPromise.prototype.injector;\n    /** @type {?} */\n    ParentInjectorPromise.prototype.injectorKey;\n    /** @type {?} */\n    ParentInjectorPromise.prototype.callbacks;\n    /** @type {?} */\n    ParentInjectorPromise.prototype.element;\n}\n/**\n * @template T\n * @param {?} obj\n * @return {?}\n */\nfunction isThenable(obj) {\n    return isFunction((/** @type {?} */ (obj)).then);\n}\n//# sourceMappingURL=downgrade_component.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { $INJECTOR, INJECTOR_KEY } from './constants';\nimport { getTypeName, isFunction, validateInjectionKey } from './util';\n/**\n * \\@description\n *\n * A helper function to allow an Angular service to be accessible from AngularJS.\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * This helper function returns a factory function that provides access to the Angular\n * service identified by the `token` parameter.\n *\n * \\@usageNotes\n * ### Examples\n *\n * First ensure that the service to be downgraded is provided in an `NgModule`\n * that will be part of the upgrade application. For example, let's assume we have\n * defined `HeroesService`\n *\n * {\\@example upgrade/static/ts/full/module.ts region=\"ng2-heroes-service\"}\n *\n * and that we have included this in our upgrade app `NgModule`\n *\n * {\\@example upgrade/static/ts/full/module.ts region=\"ng2-module\"}\n *\n * Now we can register the `downgradeInjectable` factory function for the service\n * on an AngularJS module.\n *\n * {\\@example upgrade/static/ts/full/module.ts region=\"downgrade-ng2-heroes-service\"}\n *\n * Inside an AngularJS component's controller we can get hold of the\n * downgraded service via the name we gave when downgrading.\n *\n * {\\@example upgrade/static/ts/full/module.ts region=\"example-app\"}\n *\n * <div class=\"alert is-important\">\n *\n *   When using `downgradeModule()`, downgraded injectables will not be available until the Angular\n *   module that provides them is instantiated. In order to be safe, you need to ensure that the\n *   downgraded injectables are not used anywhere _outside_ the part of the app where it is\n *   guaranteed that their module has been instantiated.\n *\n *   For example, it is _OK_ to use a downgraded service in an upgraded component that is only used\n *   from a downgraded Angular component provided by the same Angular module as the injectable, but\n *   it is _not OK_ to use it in an AngularJS component that may be used independently of Angular or\n *   use it in a downgraded Angular component from a different module.\n *\n * </div>\n *\n * \\@publicApi\n * @param {?} token an `InjectionToken` that identifies a service provided from Angular.\n * @param {?=} downgradedModule the name of the downgraded module (if any) that the injectable\n * \"belongs to\", as returned by a call to `downgradeModule()`. It is the module, whose injector will\n * be used for instantiating the injectable.<br />\n * (This option is only necessary when using `downgradeModule()` to downgrade more than one Angular\n * module.)\n *\n * @return {?} a [factory function](https://docs.angularjs.org/guide/di) that can be\n * used to register the service on an AngularJS module.\n *\n */\nexport function downgradeInjectable(token, downgradedModule) {\n    if (downgradedModule === void 0) { downgradedModule = ''; }\n    /** @type {?} */\n    var factory = function ($injector) {\n        /** @type {?} */\n        var injectorKey = \"\" + INJECTOR_KEY + downgradedModule;\n        /** @type {?} */\n        var injectableName = isFunction(token) ? getTypeName(token) : String(token);\n        /** @type {?} */\n        var attemptedAction = \"instantiating injectable '\" + injectableName + \"'\";\n        validateInjectionKey($injector, downgradedModule, injectorKey, attemptedAction);\n        /** @type {?} */\n        var injector = $injector.get(injectorKey);\n        return injector.get(token);\n    };\n    (/** @type {?} */ (factory))['$inject'] = [$INJECTOR];\n    return factory;\n}\n//# sourceMappingURL=downgrade_injectable.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version } from '@angular/core';\n/** *\n * \\@publicApi\n  @type {?} */\nexport var VERSION = new Version('7.1.0-beta.2-da59206995');\n//# sourceMappingURL=version.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nvar tempInjectorRef;\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function setTempInjectorRef(injector) {\n    tempInjectorRef = injector;\n}\n/**\n * @return {?}\n */\nexport function injectorFactory() {\n    if (!tempInjectorRef) {\n        throw new Error('Trying to get the AngularJS injector before it being set.');\n    }\n    /** @type {?} */\n    var injector = tempInjectorRef;\n    tempInjectorRef = null; // clear the value to prevent memory leaks\n    return injector;\n}\n/**\n * @param {?} i\n * @return {?}\n */\nexport function rootScopeFactory(i) {\n    return i.get('$rootScope');\n}\n/**\n * @param {?} i\n * @return {?}\n */\nexport function compileFactory(i) {\n    return i.get('$compile');\n}\n/**\n * @param {?} i\n * @return {?}\n */\nexport function parseFactory(i) {\n    return i.get('$parse');\n}\n/** @type {?} */\nexport var angular1Providers = [\n    // We must use exported named functions for the ng2 factories to keep the compiler happy:\n    // > Metadata collected contains an error that will be reported at runtime:\n    // >   Function calls are not supported.\n    // >   Consider replacing the function or lambda with a reference to an exported function\n    { provide: '$injector', useFactory: injectorFactory, deps: [] },\n    { provide: '$rootScope', useFactory: rootScopeFactory, deps: ['$injector'] },\n    { provide: '$compile', useFactory: compileFactory, deps: ['$injector'] },\n    { provide: '$parse', useFactory: parseFactory, deps: ['$injector'] }\n];\n//# sourceMappingURL=angular1_providers.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR } from '@angular/core';\nvar NgAdapterInjector = /** @class */ (function () {\n    function NgAdapterInjector(modInjector) {\n        this.modInjector = modInjector;\n    }\n    // When Angular locate a service in the component injector tree, the not found value is set to\n    // `NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR`. In such a case we should not walk up to the module\n    // injector.\n    // AngularJS only supports a single tree and should always check the module injector.\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NgAdapterInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            return notFoundValue;\n        }\n        return this.modInjector.get(token, notFoundValue);\n    };\n    return NgAdapterInjector;\n}());\nexport { NgAdapterInjector };\nif (false) {\n    /** @type {?} */\n    NgAdapterInjector.prototype.modInjector;\n}\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { platformBrowser } from '@angular/platform-browser';\nimport * as angular from '../common/angular1';\nimport { $INJECTOR, $PROVIDE, DOWNGRADED_MODULE_COUNT_KEY, INJECTOR_KEY, LAZY_MODULE_REF, UPGRADE_APP_TYPE_KEY, UPGRADE_MODULE_NAME } from '../common/constants';\nimport { getDowngradedModuleCount, isFunction } from '../common/util';\nimport { angular1Providers, setTempInjectorRef } from './angular1_providers';\nimport { NgAdapterInjector } from './util';\n/** @type {?} */\nvar moduleUid = 0;\n/**\n * \\@description\n *\n * A helper function for creating an AngularJS module that can bootstrap an Angular module\n * \"on-demand\" (possibly lazily) when a {\\@link downgradeComponent downgraded component} needs to be\n * instantiated.\n *\n * *Part of the [upgrade/static](api?query=upgrade/static) library for hybrid upgrade apps that\n * support AoT compilation.*\n *\n * It allows loading/bootstrapping the Angular part of a hybrid application lazily and not having to\n * pay the cost up-front. For example, you can have an AngularJS application that uses Angular for\n * specific routes and only instantiate the Angular modules if/when the user visits one of these\n * routes.\n *\n * The Angular module will be bootstrapped once (when requested for the first time) and the same\n * reference will be used from that point onwards.\n *\n * `downgradeModule()` requires either an `NgModuleFactory` or a function:\n * - `NgModuleFactory`: If you pass an `NgModuleFactory`, it will be used to instantiate a module\n *   using `platformBrowser`'s {\\@link PlatformRef#bootstrapModuleFactory bootstrapModuleFactory()}.\n * - `Function`: If you pass a function, it is expected to return a promise resolving to an\n *   `NgModuleRef`. The function is called with an array of extra {\\@link StaticProvider Providers}\n *   that are expected to be available from the returned `NgModuleRef`'s `Injector`.\n *\n * `downgradeModule()` returns the name of the created AngularJS wrapper module. You can use it to\n * declare a dependency in your main AngularJS module.\n *\n * {\\@example upgrade/static/ts/lite/module.ts region=\"basic-how-to\"}\n *\n * For more details on how to use `downgradeModule()` see\n * [Upgrading for Performance](guide/upgrade-performance).\n *\n * \\@usageNotes\n *\n * Apart from `UpgradeModule`, you can use the rest of the `upgrade/static` helpers as usual to\n * build a hybrid application. Note that the Angular pieces (e.g. downgraded services) will not be\n * available until the downgraded module has been bootstrapped, i.e. by instantiating a downgraded\n * component.\n *\n * <div class=\"alert is-important\">\n *\n *   You cannot use `downgradeModule()` and `UpgradeModule` in the same hybrid application.<br />\n *   Use one or the other.\n *\n * </div>\n *\n * ### Differences with `UpgradeModule`\n *\n * Besides their different API, there are two important internal differences between\n * `downgradeModule()` and `UpgradeModule` that affect the behavior of hybrid applications:\n *\n * 1. Unlike `UpgradeModule`, `downgradeModule()` does not bootstrap the main AngularJS module\n *    inside the {\\@link NgZone Angular zone}.\n * 2. Unlike `UpgradeModule`, `downgradeModule()` does not automatically run a\n *    [$digest()](https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest) when changes are\n *    detected in the Angular part of the application.\n *\n * What this means is that applications using `UpgradeModule` will run change detection more\n * frequently in order to ensure that both frameworks are properly notified about possible changes.\n * This will inevitably result in more change detection runs than necessary.\n *\n * `downgradeModule()`, on the other side, does not try to tie the two change detection systems as\n * tightly, restricting the explicit change detection runs only to cases where it knows it is\n * necessary (e.g. when the inputs of a downgraded component change). This improves performance,\n * especially in change-detection-heavy applications, but leaves it up to the developer to manually\n * notify each framework as needed.\n *\n * For a more detailed discussion of the differences and their implications, see\n * [Upgrading for Performance](guide/upgrade-performance).\n *\n * <div class=\"alert is-helpful\">\n *\n *   You can manually trigger a change detection run in AngularJS using\n *   [scope.$apply(...)](https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$apply) or\n *   [$rootScope.$digest()](https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest).\n *\n *   You can manually trigger a change detection run in Angular using {\\@link NgZone#run\n *   ngZone.run(...)}.\n *\n * </div>\n *\n * \\@publicApi\n * @template T\n * @param {?} moduleFactoryOrBootstrapFn\n * @return {?}\n */\nexport function downgradeModule(moduleFactoryOrBootstrapFn) {\n    /** @type {?} */\n    var lazyModuleName = UPGRADE_MODULE_NAME + \".lazy\" + ++moduleUid;\n    /** @type {?} */\n    var lazyModuleRefKey = \"\" + LAZY_MODULE_REF + lazyModuleName;\n    /** @type {?} */\n    var lazyInjectorKey = \"\" + INJECTOR_KEY + lazyModuleName;\n    /** @type {?} */\n    var bootstrapFn = isFunction(moduleFactoryOrBootstrapFn) ?\n        moduleFactoryOrBootstrapFn :\n        function (extraProviders) {\n            return platformBrowser(extraProviders).bootstrapModuleFactory(moduleFactoryOrBootstrapFn);\n        };\n    /** @type {?} */\n    var injector;\n    // Create an ng1 module to bootstrap.\n    angular.module(lazyModuleName, [])\n        .constant(UPGRADE_APP_TYPE_KEY, 3 /* Lite */)\n        .factory(INJECTOR_KEY, [lazyInjectorKey, identity])\n        .factory(lazyInjectorKey, function () {\n        if (!injector) {\n            throw new Error('Trying to get the Angular injector before bootstrapping the corresponding ' +\n                'Angular module.');\n        }\n        return injector;\n    })\n        .factory(LAZY_MODULE_REF, [lazyModuleRefKey, identity])\n        .factory(lazyModuleRefKey, [\n        $INJECTOR,\n        function ($injector) {\n            setTempInjectorRef($injector);\n            /** @type {?} */\n            var result = {\n                needsNgZone: true,\n                promise: bootstrapFn(angular1Providers).then(function (ref) {\n                    injector = result.injector = new NgAdapterInjector(ref.injector);\n                    injector.get($INJECTOR);\n                    return injector;\n                })\n            };\n            return result;\n        }\n    ])\n        .config([\n        $INJECTOR, $PROVIDE,\n        function ($injector, $provide) {\n            $provide.constant(DOWNGRADED_MODULE_COUNT_KEY, getDowngradedModuleCount($injector) + 1);\n        }\n    ]);\n    return lazyModuleName;\n}\n/**\n * @template T\n * @param {?} x\n * @return {?}\n */\nfunction identity(x) {\n    return x;\n}\n//# sourceMappingURL=downgrade_module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as angular from './angular1';\nimport { $COMPILE, $CONTROLLER, $HTTP_BACKEND, $INJECTOR, $TEMPLATE_CACHE } from './constants';\nimport { controllerKey, directiveNormalize, isFunction } from './util';\n/** @type {?} */\nvar REQUIRE_PREFIX_RE = /^(\\^\\^?)?(\\?)?(\\^\\^?)?/;\n/**\n * @record\n */\nexport function IBindingDestination() { }\n/* TODO: handle strange member:\n[key: string]: any;\n*/\n/** @type {?|undefined} */\nIBindingDestination.prototype.$onChanges;\n/**\n * @record\n */\nexport function IControllerInstance() { }\n/** @type {?|undefined} */\nIControllerInstance.prototype.$doCheck;\n/** @type {?|undefined} */\nIControllerInstance.prototype.$onDestroy;\n/** @type {?|undefined} */\nIControllerInstance.prototype.$onInit;\n/** @type {?|undefined} */\nIControllerInstance.prototype.$postLink;\nvar UpgradeHelper = /** @class */ (function () {\n    function UpgradeHelper(injector, name, elementRef, directive) {\n        this.injector = injector;\n        this.name = name;\n        this.$injector = injector.get($INJECTOR);\n        this.$compile = this.$injector.get($COMPILE);\n        this.$controller = this.$injector.get($CONTROLLER);\n        this.element = elementRef.nativeElement;\n        this.$element = angular.element(this.element);\n        this.directive = directive || UpgradeHelper.getDirective(this.$injector, name);\n    }\n    /**\n     * @param {?} $injector\n     * @param {?} name\n     * @return {?}\n     */\n    UpgradeHelper.getDirective = /**\n     * @param {?} $injector\n     * @param {?} name\n     * @return {?}\n     */\n    function ($injector, name) {\n        /** @type {?} */\n        var directives = $injector.get(name + 'Directive');\n        if (directives.length > 1) {\n            throw new Error(\"Only support single directive definition for: \" + name);\n        }\n        /** @type {?} */\n        var directive = directives[0];\n        // AngularJS will transform `link: xyz` to `compile: () => xyz`. So we can only tell there was a\n        // user-defined `compile` if there is no `link`. In other cases, we will just ignore `compile`.\n        if (directive.compile && !directive.link)\n            notSupported(name, 'compile');\n        if (directive.replace)\n            notSupported(name, 'replace');\n        if (directive.terminal)\n            notSupported(name, 'terminal');\n        return directive;\n    };\n    /**\n     * @param {?} $injector\n     * @param {?} directive\n     * @param {?=} fetchRemoteTemplate\n     * @return {?}\n     */\n    UpgradeHelper.getTemplate = /**\n     * @param {?} $injector\n     * @param {?} directive\n     * @param {?=} fetchRemoteTemplate\n     * @return {?}\n     */\n    function ($injector, directive, fetchRemoteTemplate) {\n        if (fetchRemoteTemplate === void 0) { fetchRemoteTemplate = false; }\n        if (directive.template !== undefined) {\n            return getOrCall(directive.template);\n        }\n        else if (directive.templateUrl) {\n            /** @type {?} */\n            var $templateCache_1 = /** @type {?} */ ($injector.get($TEMPLATE_CACHE));\n            /** @type {?} */\n            var url_1 = getOrCall(directive.templateUrl);\n            /** @type {?} */\n            var template = $templateCache_1.get(url_1);\n            if (template !== undefined) {\n                return template;\n            }\n            else if (!fetchRemoteTemplate) {\n                throw new Error('loading directive templates asynchronously is not supported');\n            }\n            return new Promise(function (resolve, reject) {\n                /** @type {?} */\n                var $httpBackend = /** @type {?} */ ($injector.get($HTTP_BACKEND));\n                $httpBackend('GET', url_1, null, function (status, response) {\n                    if (status === 200) {\n                        resolve($templateCache_1.put(url_1, response));\n                    }\n                    else {\n                        reject(\"GET component template from '\" + url_1 + \"' returned '\" + status + \": \" + response + \"'\");\n                    }\n                });\n            });\n        }\n        else {\n            throw new Error(\"Directive '\" + directive.name + \"' is not a component, it is missing template.\");\n        }\n    };\n    /**\n     * @param {?} controllerType\n     * @param {?} $scope\n     * @return {?}\n     */\n    UpgradeHelper.prototype.buildController = /**\n     * @param {?} controllerType\n     * @param {?} $scope\n     * @return {?}\n     */\n    function (controllerType, $scope) {\n        /** @type {?} */\n        var locals = { '$scope': $scope, '$element': this.$element };\n        /** @type {?} */\n        var controller = this.$controller(controllerType, locals, null, this.directive.controllerAs); /** @type {?} */\n        ((this.$element.data))(controllerKey(/** @type {?} */ ((this.directive.name))), controller);\n        return controller;\n    };\n    /**\n     * @param {?=} template\n     * @return {?}\n     */\n    UpgradeHelper.prototype.compileTemplate = /**\n     * @param {?=} template\n     * @return {?}\n     */\n    function (template) {\n        if (template === undefined) {\n            template = /** @type {?} */ (UpgradeHelper.getTemplate(this.$injector, this.directive));\n        }\n        return this.compileHtml(template);\n    };\n    /**\n     * @param {?} $scope\n     * @param {?=} controllerInstance\n     * @return {?}\n     */\n    UpgradeHelper.prototype.onDestroy = /**\n     * @param {?} $scope\n     * @param {?=} controllerInstance\n     * @return {?}\n     */\n    function ($scope, controllerInstance) {\n        if (controllerInstance && isFunction(controllerInstance.$onDestroy)) {\n            controllerInstance.$onDestroy();\n        }\n        $scope.$destroy();\n        // Clean the jQuery/jqLite data on the component+child elements.\n        // Equivelent to how jQuery/jqLite invoke `cleanData` on an Element (this.element)\n        //  https://github.com/jquery/jquery/blob/e743cbd28553267f955f71ea7248377915613fd9/src/manipulation.js#L223\n        //  https://github.com/angular/angular.js/blob/26ddc5f830f902a3d22f4b2aab70d86d4d688c82/src/jqLite.js#L306-L312\n        // `cleanData` will invoke the AngularJS `$destroy` DOM event\n        //  https://github.com/angular/angular.js/blob/26ddc5f830f902a3d22f4b2aab70d86d4d688c82/src/Angular.js#L1911-L1924\n        angular.element.cleanData([this.element]);\n        angular.element.cleanData(this.element.querySelectorAll('*'));\n    };\n    /**\n     * @return {?}\n     */\n    UpgradeHelper.prototype.prepareTransclusion = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var transclude = this.directive.transclude;\n        /** @type {?} */\n        var contentChildNodes = this.extractChildNodes();\n        /** @type {?} */\n        var attachChildrenFn = function (scope, cloneAttachFn) {\n            // Since AngularJS v1.5.8, `cloneAttachFn` will try to destroy the transclusion scope if\n            // `$template` is empty. Since the transcluded content comes from Angular, not AngularJS,\n            // there will be no transclusion scope here.\n            // Provide a dummy `scope.$destroy()` method to prevent `cloneAttachFn` from throwing.\n            scope = scope || { $destroy: function () { return undefined; } };\n            return /** @type {?} */ ((cloneAttachFn))($template, scope);\n        };\n        /** @type {?} */\n        var $template = contentChildNodes;\n        if (transclude) {\n            /** @type {?} */\n            var slots_1 = Object.create(null);\n            if (typeof transclude === 'object') {\n                $template = [];\n                /** @type {?} */\n                var slotMap_1 = Object.create(null);\n                /** @type {?} */\n                var filledSlots_1 = Object.create(null);\n                // Parse the element selectors.\n                Object.keys(transclude).forEach(function (slotName) {\n                    /** @type {?} */\n                    var selector = transclude[slotName];\n                    /** @type {?} */\n                    var optional = selector.charAt(0) === '?';\n                    selector = optional ? selector.substring(1) : selector;\n                    slotMap_1[selector] = slotName;\n                    slots_1[slotName] = null; // `null`: Defined but not yet filled.\n                    filledSlots_1[slotName] = optional; // Consider optional slots as filled.\n                });\n                // Add the matching elements into their slot.\n                contentChildNodes.forEach(function (node) {\n                    /** @type {?} */\n                    var slotName = slotMap_1[directiveNormalize(node.nodeName.toLowerCase())];\n                    if (slotName) {\n                        filledSlots_1[slotName] = true;\n                        slots_1[slotName] = slots_1[slotName] || [];\n                        slots_1[slotName].push(node);\n                    }\n                    else {\n                        $template.push(node);\n                    }\n                });\n                // Check for required slots that were not filled.\n                Object.keys(filledSlots_1).forEach(function (slotName) {\n                    if (!filledSlots_1[slotName]) {\n                        throw new Error(\"Required transclusion slot '\" + slotName + \"' on directive: \" + _this.name);\n                    }\n                });\n                Object.keys(slots_1).filter(function (slotName) { return slots_1[slotName]; }).forEach(function (slotName) {\n                    /** @type {?} */\n                    var nodes = slots_1[slotName];\n                    slots_1[slotName] = function (scope, cloneAttach) { return ((cloneAttach))(nodes, scope); };\n                });\n            }\n            // Attach `$$slots` to default slot transclude fn.\n            attachChildrenFn.$$slots = slots_1;\n            // AngularJS v1.6+ ignores empty or whitespace-only transcluded text nodes. But Angular\n            // removes all text content after the first interpolation and updates it later, after\n            // evaluating the expressions. This would result in AngularJS failing to recognize text\n            // nodes that start with an interpolation as transcluded content and use the fallback\n            // content instead.\n            // To avoid this issue, we add a\n            // [zero-width non-joiner character](https://en.wikipedia.org/wiki/Zero-width_non-joiner)\n            // to empty text nodes (which can only be a result of Angular removing their initial content).\n            // NOTE: Transcluded text content that starts with whitespace followed by an interpolation\n            //       will still fail to be detected by AngularJS v1.6+\n            $template.forEach(function (node) {\n                if (node.nodeType === Node.TEXT_NODE && !node.nodeValue) {\n                    node.nodeValue = '\\u200C';\n                }\n            });\n        }\n        return attachChildrenFn;\n    };\n    /**\n     * @param {?} controllerInstance\n     * @return {?}\n     */\n    UpgradeHelper.prototype.resolveAndBindRequiredControllers = /**\n     * @param {?} controllerInstance\n     * @return {?}\n     */\n    function (controllerInstance) {\n        /** @type {?} */\n        var directiveRequire = this.getDirectiveRequire();\n        /** @type {?} */\n        var requiredControllers = this.resolveRequire(directiveRequire);\n        if (controllerInstance && this.directive.bindToController && isMap(directiveRequire)) {\n            /** @type {?} */\n            var requiredControllersMap_1 = /** @type {?} */ (requiredControllers);\n            Object.keys(requiredControllersMap_1).forEach(function (key) {\n                controllerInstance[key] = requiredControllersMap_1[key];\n            });\n        }\n        return requiredControllers;\n    };\n    /**\n     * @param {?} html\n     * @return {?}\n     */\n    UpgradeHelper.prototype.compileHtml = /**\n     * @param {?} html\n     * @return {?}\n     */\n    function (html) {\n        this.element.innerHTML = html;\n        return this.$compile(this.element.childNodes);\n    };\n    /**\n     * @return {?}\n     */\n    UpgradeHelper.prototype.extractChildNodes = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var childNodes = [];\n        /** @type {?} */\n        var childNode;\n        while (childNode = this.element.firstChild) {\n            this.element.removeChild(childNode);\n            childNodes.push(childNode);\n        }\n        return childNodes;\n    };\n    /**\n     * @return {?}\n     */\n    UpgradeHelper.prototype.getDirectiveRequire = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var require = this.directive.require || /** @type {?} */ (((this.directive.controller && this.directive.name)));\n        if (isMap(require)) {\n            Object.keys(require).forEach(function (key) {\n                /** @type {?} */\n                var value = require[key];\n                /** @type {?} */\n                var match = /** @type {?} */ ((value.match(REQUIRE_PREFIX_RE)));\n                /** @type {?} */\n                var name = value.substring(match[0].length);\n                if (!name) {\n                    require[key] = match[0] + key;\n                }\n            });\n        }\n        return require;\n    };\n    /**\n     * @param {?} require\n     * @param {?=} controllerInstance\n     * @return {?}\n     */\n    UpgradeHelper.prototype.resolveRequire = /**\n     * @param {?} require\n     * @param {?=} controllerInstance\n     * @return {?}\n     */\n    function (require, controllerInstance) {\n        var _this = this;\n        if (!require) {\n            return null;\n        }\n        else if (Array.isArray(require)) {\n            return require.map(function (req) { return _this.resolveRequire(req); });\n        }\n        else if (typeof require === 'object') {\n            /** @type {?} */\n            var value_1 = {};\n            Object.keys(require).forEach(function (key) { return value_1[key] = /** @type {?} */ ((_this.resolveRequire(require[key]))); });\n            return value_1;\n        }\n        else if (typeof require === 'string') {\n            /** @type {?} */\n            var match = /** @type {?} */ ((require.match(REQUIRE_PREFIX_RE)));\n            /** @type {?} */\n            var inheritType = match[1] || match[3];\n            /** @type {?} */\n            var name_1 = require.substring(match[0].length);\n            /** @type {?} */\n            var isOptional = !!match[2];\n            /** @type {?} */\n            var searchParents = !!inheritType;\n            /** @type {?} */\n            var startOnParent = inheritType === '^^';\n            /** @type {?} */\n            var ctrlKey = controllerKey(name_1);\n            /** @type {?} */\n            var elem = startOnParent ? /** @type {?} */ ((this.$element.parent))() : this.$element;\n            /** @type {?} */\n            var value = searchParents ? /** @type {?} */ ((elem.inheritedData))(ctrlKey) : /** @type {?} */ ((elem.data))(ctrlKey);\n            if (!value && !isOptional) {\n                throw new Error(\"Unable to find required '\" + require + \"' in upgraded directive '\" + this.name + \"'.\");\n            }\n            return value;\n        }\n        else {\n            throw new Error(\"Unrecognized 'require' syntax on upgraded directive '\" + this.name + \"': \" + require);\n        }\n    };\n    return UpgradeHelper;\n}());\nexport { UpgradeHelper };\nif (false) {\n    /** @type {?} */\n    UpgradeHelper.prototype.$injector;\n    /** @type {?} */\n    UpgradeHelper.prototype.element;\n    /** @type {?} */\n    UpgradeHelper.prototype.$element;\n    /** @type {?} */\n    UpgradeHelper.prototype.directive;\n    /** @type {?} */\n    UpgradeHelper.prototype.$compile;\n    /** @type {?} */\n    UpgradeHelper.prototype.$controller;\n    /** @type {?} */\n    UpgradeHelper.prototype.injector;\n    /** @type {?} */\n    UpgradeHelper.prototype.name;\n}\n/**\n * @template T\n * @param {?} property\n * @return {?}\n */\nfunction getOrCall(property) {\n    return isFunction(property) ? property() : property;\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction isMap(value) {\n    return value && !Array.isArray(value) && typeof value === 'object';\n}\n/**\n * @param {?} name\n * @param {?} feature\n * @return {?}\n */\nfunction notSupported(name, feature) {\n    throw new Error(\"Upgraded directive '\" + name + \"' contains unsupported feature: '\" + feature + \"'.\");\n}\n//# sourceMappingURL=upgrade_helper.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { EventEmitter, ɵlooseIdentical as looseIdentical } from '@angular/core';\nimport { $SCOPE } from '../common/constants';\nimport { UpgradeHelper } from '../common/upgrade_helper';\nimport { isFunction } from '../common/util';\n/** @type {?} */\nvar NOT_SUPPORTED = 'NOT_SUPPORTED';\n/** @type {?} */\nvar INITIAL_VALUE = {\n    __UNINITIALIZED__: true\n};\nvar Bindings = /** @class */ (function () {\n    function Bindings() {\n        this.twoWayBoundProperties = [];\n        this.twoWayBoundLastValues = [];\n        this.expressionBoundProperties = [];\n        this.propertyToOutputMap = {};\n    }\n    return Bindings;\n}());\nif (false) {\n    /** @type {?} */\n    Bindings.prototype.twoWayBoundProperties;\n    /** @type {?} */\n    Bindings.prototype.twoWayBoundLastValues;\n    /** @type {?} */\n    Bindings.prototype.expressionBoundProperties;\n    /** @type {?} */\n    Bindings.prototype.propertyToOutputMap;\n}\n/**\n * \\@description\n *\n * A helper class that allows an AngularJS component to be used from Angular.\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation.*\n *\n * This helper class should be used as a base class for creating Angular directives\n * that wrap AngularJS components that need to be \"upgraded\".\n *\n * \\@usageNotes\n * ### Examples\n *\n * Let's assume that you have an AngularJS component called `ng1Hero` that needs\n * to be made available in Angular templates.\n *\n * {\\@example upgrade/static/ts/full/module.ts region=\"ng1-hero\"}\n *\n * We must create a `Directive` that will make this AngularJS component\n * available inside Angular templates.\n *\n * {\\@example upgrade/static/ts/full/module.ts region=\"ng1-hero-wrapper\"}\n *\n * In this example you can see that we must derive from the `UpgradeComponent`\n * base class but also provide an {\\@link Directive `\\@Directive`} decorator. This is\n * because the AoT compiler requires that this information is statically available at\n * compile time.\n *\n * Note that we must do the following:\n * * specify the directive's selector (`ng1-hero`)\n * * specify all inputs and outputs that the AngularJS component expects\n * * derive from `UpgradeComponent`\n * * call the base class from the constructor, passing\n *   * the AngularJS name of the component (`ng1Hero`)\n *   * the `ElementRef` and `Injector` for the component wrapper\n *\n * \\@publicApi\n */\nvar /**\n * \\@description\n *\n * A helper class that allows an AngularJS component to be used from Angular.\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation.*\n *\n * This helper class should be used as a base class for creating Angular directives\n * that wrap AngularJS components that need to be \"upgraded\".\n *\n * \\@usageNotes\n * ### Examples\n *\n * Let's assume that you have an AngularJS component called `ng1Hero` that needs\n * to be made available in Angular templates.\n *\n * {\\@example upgrade/static/ts/full/module.ts region=\"ng1-hero\"}\n *\n * We must create a `Directive` that will make this AngularJS component\n * available inside Angular templates.\n *\n * {\\@example upgrade/static/ts/full/module.ts region=\"ng1-hero-wrapper\"}\n *\n * In this example you can see that we must derive from the `UpgradeComponent`\n * base class but also provide an {\\@link Directive `\\@Directive`} decorator. This is\n * because the AoT compiler requires that this information is statically available at\n * compile time.\n *\n * Note that we must do the following:\n * * specify the directive's selector (`ng1-hero`)\n * * specify all inputs and outputs that the AngularJS component expects\n * * derive from `UpgradeComponent`\n * * call the base class from the constructor, passing\n *   * the AngularJS name of the component (`ng1Hero`)\n *   * the `ElementRef` and `Injector` for the component wrapper\n *\n * \\@publicApi\n */\nUpgradeComponent = /** @class */ (function () {\n    /**\n     * Create a new `UpgradeComponent` instance. You should not normally need to do this.\n     * Instead you should derive a new class from this one and call the super constructor\n     * from the base class.\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"ng1-hero-wrapper\" }\n     *\n     * * The `name` parameter should be the name of the AngularJS directive.\n     * * The `elementRef` and `injector` parameters should be acquired from Angular by dependency\n     *   injection into the base class constructor.\n     */\n    function UpgradeComponent(name, elementRef, injector) {\n        this.name = name;\n        this.elementRef = elementRef;\n        this.injector = injector;\n        this.helper = new UpgradeHelper(injector, name, elementRef);\n        this.$injector = this.helper.$injector;\n        this.element = this.helper.element;\n        this.$element = this.helper.$element;\n        this.directive = this.helper.directive;\n        this.bindings = this.initializeBindings(this.directive);\n        /** @type {?} */\n        var $parentScope = injector.get($SCOPE);\n        // QUESTION 1: Should we create an isolated scope if the scope is only true?\n        // QUESTION 2: Should we make the scope accessible through `$element.scope()/isolateScope()`?\n        this.$componentScope = $parentScope.$new(!!this.directive.scope);\n        this.initializeOutputs();\n    }\n    /**\n     * @return {?}\n     */\n    UpgradeComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var attachChildNodes = this.helper.prepareTransclusion();\n        /** @type {?} */\n        var linkFn = this.helper.compileTemplate();\n        /** @type {?} */\n        var controllerType = this.directive.controller;\n        /** @type {?} */\n        var bindToController = this.directive.bindToController;\n        if (controllerType) {\n            this.controllerInstance = this.helper.buildController(controllerType, this.$componentScope);\n        }\n        else if (bindToController) {\n            throw new Error(\"Upgraded directive '\" + this.directive.name + \"' specifies 'bindToController' but no controller.\");\n        }\n        // Set up outputs\n        this.bindingDestination = bindToController ? this.controllerInstance : this.$componentScope;\n        this.bindOutputs();\n        /** @type {?} */\n        var requiredControllers = this.helper.resolveAndBindRequiredControllers(this.controllerInstance);\n        // Hook: $onChanges\n        if (this.pendingChanges) {\n            this.forwardChanges(this.pendingChanges);\n            this.pendingChanges = null;\n        }\n        // Hook: $onInit\n        if (this.controllerInstance && isFunction(this.controllerInstance.$onInit)) {\n            this.controllerInstance.$onInit();\n        }\n        // Hook: $doCheck\n        if (this.controllerInstance && isFunction(this.controllerInstance.$doCheck)) {\n            /** @type {?} */\n            var callDoCheck = function () { return ((_this.controllerInstance.$doCheck))(); };\n            this.unregisterDoCheckWatcher = this.$componentScope.$parent.$watch(callDoCheck);\n            callDoCheck();\n        }\n        /** @type {?} */\n        var link = this.directive.link;\n        /** @type {?} */\n        var preLink = (typeof link == 'object') && (/** @type {?} */ (link)).pre;\n        /** @type {?} */\n        var postLink = (typeof link == 'object') ? (/** @type {?} */ (link)).post : link;\n        /** @type {?} */\n        var attrs = NOT_SUPPORTED;\n        /** @type {?} */\n        var transcludeFn = NOT_SUPPORTED;\n        if (preLink) {\n            preLink(this.$componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n        }\n        linkFn(this.$componentScope, /** @type {?} */ ((null)), { parentBoundTranscludeFn: attachChildNodes });\n        if (postLink) {\n            postLink(this.$componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n        }\n        // Hook: $postLink\n        if (this.controllerInstance && isFunction(this.controllerInstance.$postLink)) {\n            this.controllerInstance.$postLink();\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    UpgradeComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (!this.bindingDestination) {\n            this.pendingChanges = changes;\n        }\n        else {\n            this.forwardChanges(changes);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    UpgradeComponent.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var twoWayBoundProperties = this.bindings.twoWayBoundProperties;\n        /** @type {?} */\n        var twoWayBoundLastValues = this.bindings.twoWayBoundLastValues;\n        /** @type {?} */\n        var propertyToOutputMap = this.bindings.propertyToOutputMap;\n        twoWayBoundProperties.forEach(function (propName, idx) {\n            /** @type {?} */\n            var newValue = _this.bindingDestination[propName];\n            /** @type {?} */\n            var oldValue = twoWayBoundLastValues[idx];\n            if (!looseIdentical(newValue, oldValue)) {\n                /** @type {?} */\n                var outputName = propertyToOutputMap[propName];\n                /** @type {?} */\n                var eventEmitter = (/** @type {?} */ (_this))[outputName];\n                eventEmitter.emit(newValue);\n                twoWayBoundLastValues[idx] = newValue;\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    UpgradeComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (isFunction(this.unregisterDoCheckWatcher)) {\n            this.unregisterDoCheckWatcher();\n        }\n        this.helper.onDestroy(this.$componentScope, this.controllerInstance);\n    };\n    /**\n     * @param {?} directive\n     * @return {?}\n     */\n    UpgradeComponent.prototype.initializeBindings = /**\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        var _this = this;\n        /** @type {?} */\n        var btcIsObject = typeof directive.bindToController === 'object';\n        if (btcIsObject && Object.keys(/** @type {?} */ ((directive.scope))).length) {\n            throw new Error(\"Binding definitions on scope and controller at the same time is not supported.\");\n        }\n        /** @type {?} */\n        var context = (btcIsObject) ? directive.bindToController : directive.scope;\n        /** @type {?} */\n        var bindings = new Bindings();\n        if (typeof context == 'object') {\n            Object.keys(context).forEach(function (propName) {\n                /** @type {?} */\n                var definition = context[propName];\n                /** @type {?} */\n                var bindingType = definition.charAt(0);\n                // QUESTION: What about `=*`? Ignore? Throw? Support?\n                switch (bindingType) {\n                    case '@':\n                    case '<':\n                        // We don't need to do anything special. They will be defined as inputs on the\n                        // upgraded component facade and the change propagation will be handled by\n                        // `ngOnChanges()`.\n                        break;\n                    case '=':\n                        bindings.twoWayBoundProperties.push(propName);\n                        bindings.twoWayBoundLastValues.push(INITIAL_VALUE);\n                        bindings.propertyToOutputMap[propName] = propName + 'Change';\n                        break;\n                    case '&':\n                        bindings.expressionBoundProperties.push(propName);\n                        bindings.propertyToOutputMap[propName] = propName;\n                        break;\n                    default:\n                        /** @type {?} */\n                        var json = JSON.stringify(context);\n                        throw new Error(\"Unexpected mapping '\" + bindingType + \"' in '\" + json + \"' in '\" + _this.name + \"' directive.\");\n                }\n            });\n        }\n        return bindings;\n    };\n    /**\n     * @return {?}\n     */\n    UpgradeComponent.prototype.initializeOutputs = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Initialize the outputs for `=` and `&` bindings\n        this.bindings.twoWayBoundProperties.concat(this.bindings.expressionBoundProperties)\n            .forEach(function (propName) {\n            /** @type {?} */\n            var outputName = _this.bindings.propertyToOutputMap[propName];\n            (/** @type {?} */ (_this))[outputName] = new EventEmitter();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    UpgradeComponent.prototype.bindOutputs = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Bind `&` bindings to the corresponding outputs\n        this.bindings.expressionBoundProperties.forEach(function (propName) {\n            /** @type {?} */\n            var outputName = _this.bindings.propertyToOutputMap[propName];\n            /** @type {?} */\n            var emitter = (/** @type {?} */ (_this))[outputName];\n            _this.bindingDestination[propName] = function (value) { return emitter.emit(value); };\n        });\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    UpgradeComponent.prototype.forwardChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var _this = this;\n        // Forward input changes to `bindingDestination`\n        Object.keys(changes).forEach(function (propName) { return _this.bindingDestination[propName] = changes[propName].currentValue; });\n        if (isFunction(this.bindingDestination.$onChanges)) {\n            this.bindingDestination.$onChanges(changes);\n        }\n    };\n    return UpgradeComponent;\n}());\n/**\n * \\@description\n *\n * A helper class that allows an AngularJS component to be used from Angular.\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation.*\n *\n * This helper class should be used as a base class for creating Angular directives\n * that wrap AngularJS components that need to be \"upgraded\".\n *\n * \\@usageNotes\n * ### Examples\n *\n * Let's assume that you have an AngularJS component called `ng1Hero` that needs\n * to be made available in Angular templates.\n *\n * {\\@example upgrade/static/ts/full/module.ts region=\"ng1-hero\"}\n *\n * We must create a `Directive` that will make this AngularJS component\n * available inside Angular templates.\n *\n * {\\@example upgrade/static/ts/full/module.ts region=\"ng1-hero-wrapper\"}\n *\n * In this example you can see that we must derive from the `UpgradeComponent`\n * base class but also provide an {\\@link Directive `\\@Directive`} decorator. This is\n * because the AoT compiler requires that this information is statically available at\n * compile time.\n *\n * Note that we must do the following:\n * * specify the directive's selector (`ng1-hero`)\n * * specify all inputs and outputs that the AngularJS component expects\n * * derive from `UpgradeComponent`\n * * call the base class from the constructor, passing\n *   * the AngularJS name of the component (`ng1Hero`)\n *   * the `ElementRef` and `Injector` for the component wrapper\n *\n * \\@publicApi\n */\nexport { UpgradeComponent };\nif (false) {\n    /** @type {?} */\n    UpgradeComponent.prototype.helper;\n    /** @type {?} */\n    UpgradeComponent.prototype.$injector;\n    /** @type {?} */\n    UpgradeComponent.prototype.element;\n    /** @type {?} */\n    UpgradeComponent.prototype.$element;\n    /** @type {?} */\n    UpgradeComponent.prototype.$componentScope;\n    /** @type {?} */\n    UpgradeComponent.prototype.directive;\n    /** @type {?} */\n    UpgradeComponent.prototype.bindings;\n    /** @type {?} */\n    UpgradeComponent.prototype.controllerInstance;\n    /** @type {?} */\n    UpgradeComponent.prototype.bindingDestination;\n    /** @type {?} */\n    UpgradeComponent.prototype.pendingChanges;\n    /** @type {?} */\n    UpgradeComponent.prototype.unregisterDoCheckWatcher;\n    /** @type {?} */\n    UpgradeComponent.prototype.name;\n    /** @type {?} */\n    UpgradeComponent.prototype.elementRef;\n    /** @type {?} */\n    UpgradeComponent.prototype.injector;\n}\n//# sourceMappingURL=upgrade_component.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injector, NgModule, NgZone, Testability } from '@angular/core';\nimport * as angular from '../common/angular1';\nimport { $$TESTABILITY, $DELEGATE, $INJECTOR, $INTERVAL, $PROVIDE, INJECTOR_KEY, LAZY_MODULE_REF, UPGRADE_APP_TYPE_KEY, UPGRADE_MODULE_NAME } from '../common/constants';\nimport { controllerKey } from '../common/util';\nimport { angular1Providers, setTempInjectorRef } from './angular1_providers';\nimport { NgAdapterInjector } from './util';\n/**\n * \\@description\n *\n * An `NgModule`, which you import to provide AngularJS core services,\n * and has an instance method used to bootstrap the hybrid upgrade application.\n *\n * *Part of the [upgrade/static](api?query=upgrade/static)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * The `upgrade/static` package contains helpers that allow AngularJS and Angular components\n * to be used together inside a hybrid upgrade application, which supports AoT compilation.\n *\n * Specifically, the classes and functions in the `upgrade/static` module allow the following:\n *\n * 1. Creation of an Angular directive that wraps and exposes an AngularJS component so\n *    that it can be used in an Angular template. See `UpgradeComponent`.\n * 2. Creation of an AngularJS directive that wraps and exposes an Angular component so\n *    that it can be used in an AngularJS template. See `downgradeComponent`.\n * 3. Creation of an Angular root injector provider that wraps and exposes an AngularJS\n *    service so that it can be injected into an Angular context. See\n *    {\\@link UpgradeModule#upgrading-an-angular-1-service Upgrading an AngularJS service} below.\n * 4. Creation of an AngularJS service that wraps and exposes an Angular injectable\n *    so that it can be injected into an AngularJS context. See `downgradeInjectable`.\n * 3. Bootstrapping of a hybrid Angular application which contains both of the frameworks\n *    coexisting in a single application.\n *\n * \\@usageNotes\n *\n * ```ts\n * import {UpgradeModule} from '\\@angular/upgrade/static';\n * ```\n *\n * See also the {\\@link UpgradeModule#examples examples} below.\n *\n * ### Mental Model\n *\n * When reasoning about how a hybrid application works it is useful to have a mental model which\n * describes what is happening and explains what is happening at the lowest level.\n *\n * 1. There are two independent frameworks running in a single application, each framework treats\n *    the other as a black box.\n * 2. Each DOM element on the page is owned exactly by one framework. Whichever framework\n *    instantiated the element is the owner. Each framework only updates/interacts with its own\n *    DOM elements and ignores others.\n * 3. AngularJS directives always execute inside the AngularJS framework codebase regardless of\n *    where they are instantiated.\n * 4. Angular components always execute inside the Angular framework codebase regardless of\n *    where they are instantiated.\n * 5. An AngularJS component can be \"upgraded\"\" to an Angular component. This is achieved by\n *    defining an Angular directive, which bootstraps the AngularJS component at its location\n *    in the DOM. See `UpgradeComponent`.\n * 6. An Angular component can be \"downgraded\" to an AngularJS component. This is achieved by\n *    defining an AngularJS directive, which bootstraps the Angular component at its location\n *    in the DOM. See `downgradeComponent`.\n * 7. Whenever an \"upgraded\"/\"downgraded\" component is instantiated the host element is owned by\n *    the framework doing the instantiation. The other framework then instantiates and owns the\n *    view for that component.\n *    1. This implies that the component bindings will always follow the semantics of the\n *       instantiation framework.\n *    2. The DOM attributes are parsed by the framework that owns the current template. So\n *       attributes in AngularJS templates must use kebab-case, while AngularJS templates must use\n *       camelCase.\n *    3. However the template binding syntax will always use the Angular style, e.g. square\n *       brackets (`[...]`) for property binding.\n * 8. Angular is bootstrapped first; AngularJS is bootstrapped second. AngularJS always owns the\n *    root component of the application.\n * 9. The new application is running in an Angular zone, and therefore it no longer needs calls to\n *    `$apply()`.\n *\n * ### The `UpgradeModule` class\n *\n * This class is an `NgModule`, which you import to provide AngularJS core services,\n * and has an instance method used to bootstrap the hybrid upgrade application.\n *\n * * Core AngularJS services\n *   Importing this `NgModule` will add providers for the core\n *   [AngularJS services](https://docs.angularjs.org/api/ng/service) to the root injector.\n *\n * * Bootstrap\n *   The runtime instance of this class contains a {\\@link UpgradeModule#bootstrap `bootstrap()`}\n *   method, which you use to bootstrap the top level AngularJS module onto an element in the\n *   DOM for the hybrid upgrade app.\n *\n *   It also contains properties to access the {\\@link UpgradeModule#injector root injector}, the\n *   bootstrap `NgZone` and the\n *   [AngularJS $injector](https://docs.angularjs.org/api/auto/service/$injector).\n *\n * ### Examples\n *\n * Import the `UpgradeModule` into your top level {\\@link NgModule Angular `NgModule`}.\n *\n * {\\@example upgrade/static/ts/full/module.ts region='ng2-module'}\n *\n * Then inject `UpgradeModule` into your Angular `NgModule` and use it to bootstrap the top level\n * [AngularJS module](https://docs.angularjs.org/api/ng/type/angular.Module) in the\n * `ngDoBootstrap()` method.\n *\n * {\\@example upgrade/static/ts/full/module.ts region='bootstrap-ng1'}\n *\n * Finally, kick off the whole process, by bootstraping your top level Angular `NgModule`.\n *\n * {\\@example upgrade/static/ts/full/module.ts region='bootstrap-ng2'}\n *\n * {\\@a upgrading-an-angular-1-service}\n * ### Upgrading an AngularJS service\n *\n * There is no specific API for upgrading an AngularJS service. Instead you should just follow the\n * following recipe:\n *\n * Let's say you have an AngularJS service:\n *\n * {\\@example upgrade/static/ts/full/module.ts region=\"ng1-text-formatter-service\"}\n *\n * Then you should define an Angular provider to be included in your `NgModule` `providers`\n * property.\n *\n * {\\@example upgrade/static/ts/full/module.ts region=\"upgrade-ng1-service\"}\n *\n * Then you can use the \"upgraded\" AngularJS service by injecting it into an Angular component\n * or service.\n *\n * {\\@example upgrade/static/ts/full/module.ts region=\"use-ng1-upgraded-service\"}\n *\n * \\@publicApi\n */\nvar UpgradeModule = /** @class */ (function () {\n    function UpgradeModule(/** The root `Injector` for the upgrade application. */\n    injector, ngZone) {\n        this.ngZone = ngZone;\n        this.injector = new NgAdapterInjector(injector);\n    }\n    /**\n     * Bootstrap an AngularJS application from this NgModule\n     * @param element the element on which to bootstrap the AngularJS application\n     * @param [modules] the AngularJS modules to bootstrap for this application\n     * @param [config] optional extra AngularJS bootstrap configuration\n     */\n    /**\n     * Bootstrap an AngularJS application from this NgModule\n     * @param {?} element the element on which to bootstrap the AngularJS application\n     * @param {?=} modules\n     * @param {?=} config\n     * @return {?}\n     */\n    UpgradeModule.prototype.bootstrap = /**\n     * Bootstrap an AngularJS application from this NgModule\n     * @param {?} element the element on which to bootstrap the AngularJS application\n     * @param {?=} modules\n     * @param {?=} config\n     * @return {?}\n     */\n    function (element, modules, config /*angular.IAngularBootstrapConfig*/) {\n        var _this = this;\n        if (modules === void 0) { modules = []; }\n        /** @type {?} */\n        var INIT_MODULE_NAME = UPGRADE_MODULE_NAME + '.init';\n        /** @type {?} */\n        var initModule = angular\n            .module(INIT_MODULE_NAME, [])\n            .constant(UPGRADE_APP_TYPE_KEY, 2 /* Static */)\n            .value(INJECTOR_KEY, this.injector)\n            .factory(LAZY_MODULE_REF, [\n            INJECTOR_KEY,\n            function (injector) { return (/** @type {?} */ ({ injector: injector, needsNgZone: false })); }\n        ])\n            .config([\n            $PROVIDE, $INJECTOR,\n            function ($provide, $injector) {\n                if ($injector.has($$TESTABILITY)) {\n                    $provide.decorator($$TESTABILITY, [\n                        $DELEGATE,\n                        function (testabilityDelegate) {\n                            /** @type {?} */\n                            var originalWhenStable = testabilityDelegate.whenStable;\n                            /** @type {?} */\n                            var injector = _this.injector;\n                            /** @type {?} */\n                            var newWhenStable = function (callback) {\n                                originalWhenStable.call(testabilityDelegate, function () {\n                                    /** @type {?} */\n                                    var ng2Testability = injector.get(Testability);\n                                    if (ng2Testability.isStable()) {\n                                        callback();\n                                    }\n                                    else {\n                                        ng2Testability.whenStable(newWhenStable.bind(testabilityDelegate, callback));\n                                    }\n                                });\n                            };\n                            testabilityDelegate.whenStable = newWhenStable;\n                            return testabilityDelegate;\n                        }\n                    ]);\n                }\n                if ($injector.has($INTERVAL)) {\n                    $provide.decorator($INTERVAL, [\n                        $DELEGATE,\n                        function (intervalDelegate) {\n                            /** @type {?} */\n                            var wrappedInterval = function (fn, delay, count, invokeApply) {\n                                var pass = [];\n                                for (var _i = 4; _i < arguments.length; _i++) {\n                                    pass[_i - 4] = arguments[_i];\n                                }\n                                return _this.ngZone.runOutsideAngular(function () {\n                                    return intervalDelegate.apply(void 0, [function () {\n                                            var args = [];\n                                            for (var _i = 0; _i < arguments.length; _i++) {\n                                                args[_i] = arguments[_i];\n                                            }\n                                            // Run callback in the next VM turn - $interval calls\n                                            // $rootScope.$apply, and running the callback in NgZone will\n                                            // cause a '$digest already in progress' error if it's in the\n                                            // same vm turn.\n                                            setTimeout(function () { _this.ngZone.run(function () { return fn.apply(void 0, args); }); });\n                                        }, delay, count, invokeApply].concat(pass));\n                                });\n                            };\n                            (/** @type {?} */ (wrappedInterval))['cancel'] = intervalDelegate.cancel;\n                            return wrappedInterval;\n                        }\n                    ]);\n                }\n            }\n        ])\n            .run([\n            $INJECTOR,\n            function ($injector) {\n                _this.$injector = $injector;\n                // Initialize the ng1 $injector provider\n                setTempInjectorRef($injector);\n                _this.injector.get($INJECTOR); /** @type {?} */\n                ((\n                // Put the injector on the DOM, so that it can be \"required\"\n                angular.element(element).data))(controllerKey(INJECTOR_KEY), _this.injector);\n                // Wire up the ng1 rootScope to run a digest cycle whenever the zone settles\n                // We need to do this in the next tick so that we don't prevent the bootup\n                // stabilizing\n                setTimeout(function () {\n                    /** @type {?} */\n                    var $rootScope = $injector.get('$rootScope');\n                    /** @type {?} */\n                    var subscription = _this.ngZone.onMicrotaskEmpty.subscribe(function () { return $rootScope.$digest(); });\n                    $rootScope.$on('$destroy', function () { subscription.unsubscribe(); });\n                }, 0);\n            }\n        ]);\n        /** @type {?} */\n        var upgradeModule = angular.module(UPGRADE_MODULE_NAME, [INIT_MODULE_NAME].concat(modules));\n        /** @type {?} */\n        var windowAngular = (/** @type {?} */ (window))['angular'];\n        windowAngular.resumeBootstrap = undefined;\n        // Bootstrap the AngularJS application inside our zone\n        this.ngZone.run(function () { angular.bootstrap(element, [upgradeModule.name], config); });\n        // Patch resumeBootstrap() to run inside the ngZone\n        if (windowAngular.resumeBootstrap) {\n            /** @type {?} */\n            var originalResumeBootstrap_1 = windowAngular.resumeBootstrap;\n            /** @type {?} */\n            var ngZone_1 = this.ngZone;\n            windowAngular.resumeBootstrap = function () {\n                var _this = this;\n                /** @type {?} */\n                var args = arguments;\n                windowAngular.resumeBootstrap = originalResumeBootstrap_1;\n                return ngZone_1.run(function () { return windowAngular.resumeBootstrap.apply(_this, args); });\n            };\n        }\n    };\n    UpgradeModule.decorators = [\n        { type: NgModule, args: [{ providers: [angular1Providers] },] },\n    ];\n    /** @nocollapse */\n    UpgradeModule.ctorParameters = function () { return [\n        { type: Injector },\n        { type: NgZone }\n    ]; };\n    return UpgradeModule;\n}());\nexport { UpgradeModule };\nif (false) {\n    /**\n     * The AngularJS `$injector` for the upgrade application.\n     * @type {?}\n     */\n    UpgradeModule.prototype.$injector;\n    /**\n     * The Angular Injector *\n     * @type {?}\n     */\n    UpgradeModule.prototype.injector;\n    /**\n     * The bootstrap zone for the upgrade application\n     * @type {?}\n     */\n    UpgradeModule.prototype.ngZone;\n}\n//# sourceMappingURL=upgrade_module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { getAngularJSGlobal, getAngularLib, setAngularJSGlobal, setAngularLib } from './src/common/angular1';\nexport { downgradeComponent } from './src/common/downgrade_component';\nexport { downgradeInjectable } from './src/common/downgrade_injectable';\nexport { VERSION } from './src/common/version';\nexport { downgradeModule } from './src/static/downgrade_module';\nexport { UpgradeComponent } from './src/static/upgrade_component';\nexport { UpgradeModule } from './src/static/upgrade_module';\n// This file only re-exports content of the `src` folder. Keep it that way.\n//# sourceMappingURL=public_api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { getAngularJSGlobal, getAngularLib, setAngularJSGlobal, setAngularLib, downgradeComponent, downgradeInjectable, VERSION, downgradeModule, UpgradeComponent, UpgradeModule } from './public_api';\nexport { angular1Providers as ɵe, compileFactory as ɵc, injectorFactory as ɵa, parseFactory as ɵd, rootScopeFactory as ɵb } from './src/static/angular1_providers';\n//# sourceMappingURL=static.js.map"],"names":["module","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","angular.module","angular.element","INITIAL_VALUE","looseIdentical","element","angular\n            .module","angular.bootstrap"],"mappings":"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"}