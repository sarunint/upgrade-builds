{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../../../packages/upgrade/static/src/common/util.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, Type} from '@angular/core';\nimport * as angular from './angular1';\nimport {DOWNGRADED_MODULE_COUNT_KEY, UPGRADE_APP_TYPE_KEY} from './constants';\n\nconst DIRECTIVE_PREFIX_REGEXP = /^(?:x|data)[:\\-_]/i;\nconst DIRECTIVE_SPECIAL_CHARS_REGEXP = /[:\\-_]+(.)/g;\n\nexport function onError(e: any) {\n  // TODO: (misko): We seem to not have a stack trace here!\n  if (console.error) {\n    console.error(e, e.stack);\n  } else {\n    // tslint:disable-next-line:no-console\n    console.log(e, e.stack);\n  }\n  throw e;\n}\n\nexport function controllerKey(name: string): string {\n  return '$' + name + 'Controller';\n}\n\nexport function directiveNormalize(name: string): string {\n  return name.replace(DIRECTIVE_PREFIX_REGEXP, '')\n      .replace(DIRECTIVE_SPECIAL_CHARS_REGEXP, (_, letter) => letter.toUpperCase());\n}\n\nexport function getTypeName(type: Type<any>): string {\n  // Return the name of the type or the first line of its stringified version.\n  return (type as any).overriddenName || type.name || type.toString().split('\\n')[0];\n}\n\nexport function getDowngradedModuleCount($injector: angular.IInjectorService): number {\n  return $injector.has(DOWNGRADED_MODULE_COUNT_KEY) ? $injector.get(DOWNGRADED_MODULE_COUNT_KEY) :\n                                                      0;\n}\n\nexport function getUpgradeAppType($injector: angular.IInjectorService): UpgradeAppType {\n  return $injector.has(UPGRADE_APP_TYPE_KEY) ? $injector.get(UPGRADE_APP_TYPE_KEY) :\n                                               UpgradeAppType.None;\n}\n\nexport function isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\n\nexport function validateInjectionKey(\n    $injector: angular.IInjectorService, downgradedModule: string, injectionKey: string,\n    attemptedAction: string): void {\n  const upgradeAppType = getUpgradeAppType($injector);\n  const downgradedModuleCount = getDowngradedModuleCount($injector);\n\n  // Check for common errors.\n  switch (upgradeAppType) {\n    case UpgradeAppType.Dynamic:\n    case UpgradeAppType.Static:\n      if (downgradedModule) {\n        throw new Error(\n            `Error while ${attemptedAction}: 'downgradedModule' unexpectedly specified.\\n` +\n            'You should not specify a value for \\'downgradedModule\\', unless you are downgrading ' +\n            'more than one Angular module (via \\'downgradeModule()\\').');\n      }\n      break;\n    case UpgradeAppType.Lite:\n      if (!downgradedModule && (downgradedModuleCount >= 2)) {\n        throw new Error(\n            `Error while ${attemptedAction}: 'downgradedModule' not specified.\\n` +\n            'This application contains more than one downgraded Angular module, thus you need to ' +\n            'always specify \\'downgradedModule\\' when downgrading components and injectables.');\n      }\n\n      if (!$injector.has(injectionKey)) {\n        throw new Error(\n            `Error while ${attemptedAction}: Unable to find the specified downgraded module.\\n` +\n            'Did you forget to downgrade an Angular module or include it in the AngularJS ' +\n            'application?');\n      }\n\n      break;\n    default:\n      throw new Error(\n          `Error while ${attemptedAction}: Not a valid '@angular/upgrade' application.\\n` +\n          'Did you forget to downgrade an Angular module or include it in the AngularJS ' +\n          'application?');\n  }\n}\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  // TODO(issue/24571): remove '!'.\n  resolve !: (value?: R | PromiseLike<R>) => void;\n  // TODO(issue/24571): remove '!'.\n  reject !: (error?: any) => void;\n\n  constructor() {\n    this.promise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n}\n\nexport interface LazyModuleRef {\n  // Whether the AngularJS app has been bootstrapped outside the Angular zone\n  // (in which case calls to Angular APIs need to be brought back in).\n  needsNgZone: boolean;\n  injector?: Injector;\n  promise?: Promise<Injector>;\n}\n\nexport const enum UpgradeAppType {\n  // App NOT using `@angular/upgrade`. (This should never happen in an `ngUpgrade` app.)\n  None,\n\n  // App using the deprecated `@angular/upgrade` APIs (a.k.a. dynamic `ngUpgrade`).\n  Dynamic,\n\n  // App using `@angular/upgrade/static` with `UpgradeModule`.\n  Static,\n\n  // App using @angular/upgrade/static` with `downgradeModule()` (a.k.a `ngUpgrade`-lite ).\n  Lite,\n}\n\n/**\n * @return Whether the passed-in component implements the subset of the\n *     `ControlValueAccessor` interface needed for AngularJS `ng-model`\n *     compatibility.\n */\nfunction supportsNgModel(component: any) {\n  return typeof component.writeValue === 'function' &&\n      typeof component.registerOnChange === 'function';\n}\n\n/**\n * Glue the AngularJS `NgModelController` (if it exists) to the component\n * (if it implements the needed subset of the `ControlValueAccessor` interface).\n */\nexport function hookupNgModel(ngModel: angular.INgModelController, component: any) {\n  if (ngModel && supportsNgModel(component)) {\n    ngModel.$render = () => { component.writeValue(ngModel.$viewValue); };\n    component.registerOnChange(ngModel.$setViewValue.bind(ngModel));\n    if (typeof component.registerOnTouched === 'function') {\n      component.registerOnTouched(ngModel.$setTouched.bind(ngModel));\n    }\n  }\n}\n\n/**\n * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n */\nexport function strictEquals(val1: any, val2: any): boolean {\n  return val1 === val2 || (val1 !== val1 && val2 !== val2);\n}\n"]}