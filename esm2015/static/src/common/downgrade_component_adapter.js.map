{"version":3,"file":"downgrade_component_adapter.js","sourceRoot":"","sources":["../../../../../../packages/upgrade/static/src/common/downgrade_component_adapter.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef, ChangeDetectorRef, ComponentFactory, ComponentRef, EventEmitter, Injector, OnChanges, SimpleChange, SimpleChanges, StaticProvider, Testability, TestabilityRegistry, Type} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {PropertyBinding} from './component_info';\nimport {$SCOPE} from './constants';\nimport {getTypeName, hookupNgModel, strictEquals} from './util';\n\nconst INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\n\nexport class DowngradeComponentAdapter {\n  private implementsOnChanges = false;\n  private inputChangeCount: number = 0;\n  private inputChanges: SimpleChanges = {};\n  private componentScope: angular.IScope;\n  // TODO(issue/24571): remove '!'.\n  private componentRef !: ComponentRef<any>;\n  private component: any;\n  // TODO(issue/24571): remove '!'.\n  private changeDetector !: ChangeDetectorRef;\n  // TODO(issue/24571): remove '!'.\n  private viewChangeDetector !: ChangeDetectorRef;\n\n  constructor(\n      private element: angular.IAugmentedJQuery, private attrs: angular.IAttributes,\n      private scope: angular.IScope, private ngModel: angular.INgModelController,\n      private parentInjector: Injector, private $injector: angular.IInjectorService,\n      private $compile: angular.ICompileService, private $parse: angular.IParseService,\n      private componentFactory: ComponentFactory<any>,\n      private wrapCallback: <T>(cb: () => T) => () => T) {\n    this.componentScope = scope.$new();\n  }\n\n  compileContents(): Node[][] {\n    const compiledProjectableNodes: Node[][] = [];\n    const projectableNodes: Node[][] = this.groupProjectableNodes();\n    const linkFns = projectableNodes.map(nodes => this.$compile(nodes));\n\n    this.element.empty !();\n\n    linkFns.forEach(linkFn => {\n      linkFn(this.scope, (clone: Node[]) => {\n        compiledProjectableNodes.push(clone);\n        this.element.append !(clone);\n      });\n    });\n\n    return compiledProjectableNodes;\n  }\n\n  createComponent(projectableNodes: Node[][]) {\n    const providers: StaticProvider[] = [{provide: $SCOPE, useValue: this.componentScope}];\n    const childInjector = Injector.create(\n        {providers: providers, parent: this.parentInjector, name: 'DowngradeComponentAdapter'});\n\n    this.componentRef =\n        this.componentFactory.create(childInjector, projectableNodes, this.element[0]);\n    this.viewChangeDetector = this.componentRef.injector.get(ChangeDetectorRef);\n    this.changeDetector = this.componentRef.changeDetectorRef;\n    this.component = this.componentRef.instance;\n\n    // testability hook is commonly added during component bootstrap in\n    // packages/core/src/application_ref.bootstrap()\n    // in downgraded application, component creation will take place here as well as adding the\n    // testability hook.\n    const testability = this.componentRef.injector.get(Testability, null);\n    if (testability) {\n      this.componentRef.injector.get(TestabilityRegistry)\n          .registerApplication(this.componentRef.location.nativeElement, testability);\n    }\n\n    hookupNgModel(this.ngModel, this.component);\n  }\n\n  setupInputs(needsNgZone: boolean, propagateDigest = true): void {\n    const attrs = this.attrs;\n    const inputs = this.componentFactory.inputs || [];\n    for (let i = 0; i < inputs.length; i++) {\n      const input = new PropertyBinding(inputs[i].propName, inputs[i].templateName);\n      let expr: string|null = null;\n\n      if (attrs.hasOwnProperty(input.attr)) {\n        const observeFn = (prop => {\n          let prevValue = INITIAL_VALUE;\n          return (currValue: any) => {\n            // Initially, both `$observe()` and `$watch()` will call this function.\n            if (!strictEquals(prevValue, currValue)) {\n              if (prevValue === INITIAL_VALUE) {\n                prevValue = currValue;\n              }\n\n              this.updateInput(prop, prevValue, currValue);\n              prevValue = currValue;\n            }\n          };\n        })(input.prop);\n        attrs.$observe(input.attr, observeFn);\n\n        // Use `$watch()` (in addition to `$observe()`) in order to initialize the input in time\n        // for `ngOnChanges()`. This is necessary if we are already in a `$digest`, which means that\n        // `ngOnChanges()` (which is called by a watcher) will run before the `$observe()` callback.\n        let unwatch: Function|null = this.componentScope.$watch(() => {\n          unwatch !();\n          unwatch = null;\n          observeFn(attrs[input.attr]);\n        });\n\n      } else if (attrs.hasOwnProperty(input.bindAttr)) {\n        expr = attrs[input.bindAttr];\n      } else if (attrs.hasOwnProperty(input.bracketAttr)) {\n        expr = attrs[input.bracketAttr];\n      } else if (attrs.hasOwnProperty(input.bindonAttr)) {\n        expr = attrs[input.bindonAttr];\n      } else if (attrs.hasOwnProperty(input.bracketParenAttr)) {\n        expr = attrs[input.bracketParenAttr];\n      }\n      if (expr != null) {\n        const watchFn =\n            (prop => (currValue: any, prevValue: any) =>\n                 this.updateInput(prop, prevValue, currValue))(input.prop);\n        this.componentScope.$watch(expr, watchFn);\n      }\n    }\n\n    // Invoke `ngOnChanges()` and Change Detection (when necessary)\n    const detectChanges = () => this.changeDetector.detectChanges();\n    const prototype = this.componentFactory.componentType.prototype;\n    this.implementsOnChanges = !!(prototype && (<OnChanges>prototype).ngOnChanges);\n\n    this.componentScope.$watch(() => this.inputChangeCount, this.wrapCallback(() => {\n      // Invoke `ngOnChanges()`\n      if (this.implementsOnChanges) {\n        const inputChanges = this.inputChanges;\n        this.inputChanges = {};\n        (<OnChanges>this.component).ngOnChanges(inputChanges !);\n      }\n\n      this.viewChangeDetector.markForCheck();\n\n      // If opted out of propagating digests, invoke change detection when inputs change.\n      if (!propagateDigest) {\n        detectChanges();\n      }\n    }));\n\n    // If not opted out of propagating digests, invoke change detection on every digest\n    if (propagateDigest) {\n      this.componentScope.$watch(this.wrapCallback(detectChanges));\n    }\n\n    // If necessary, attach the view so that it will be dirty-checked.\n    // (Allow time for the initial input values to be set and `ngOnChanges()` to be called.)\n    if (needsNgZone || !propagateDigest) {\n      let unwatch: Function|null = this.componentScope.$watch(() => {\n        unwatch !();\n        unwatch = null;\n\n        const appRef = this.parentInjector.get<ApplicationRef>(ApplicationRef);\n        appRef.attachView(this.componentRef.hostView);\n      });\n    }\n  }\n\n  setupOutputs() {\n    const attrs = this.attrs;\n    const outputs = this.componentFactory.outputs || [];\n    for (let j = 0; j < outputs.length; j++) {\n      const output = new PropertyBinding(outputs[j].propName, outputs[j].templateName);\n      const bindonAttr = output.bindonAttr.substring(0, output.bindonAttr.length - 6);\n      const bracketParenAttr =\n          `[(${output.bracketParenAttr.substring(2, output.bracketParenAttr.length - 8)})]`;\n      // order below is important - first update bindings then evaluate expressions\n      if (attrs.hasOwnProperty(bindonAttr)) {\n        this.subscribeToOutput(output, attrs[bindonAttr], true);\n      }\n      if (attrs.hasOwnProperty(bracketParenAttr)) {\n        this.subscribeToOutput(output, attrs[bracketParenAttr], true);\n      }\n      if (attrs.hasOwnProperty(output.onAttr)) {\n        this.subscribeToOutput(output, attrs[output.onAttr]);\n      }\n      if (attrs.hasOwnProperty(output.parenAttr)) {\n        this.subscribeToOutput(output, attrs[output.parenAttr]);\n      }\n    }\n  }\n\n  private subscribeToOutput(output: PropertyBinding, expr: string, isAssignment: boolean = false) {\n    const getter = this.$parse(expr);\n    const setter = getter.assign;\n    if (isAssignment && !setter) {\n      throw new Error(`Expression '${expr}' is not assignable!`);\n    }\n    const emitter = this.component[output.prop] as EventEmitter<any>;\n    if (emitter) {\n      emitter.subscribe({\n        next: isAssignment ? (v: any) => setter !(this.scope, v) :\n                             (v: any) => getter(this.scope, {'$event': v})\n      });\n    } else {\n      throw new Error(\n          `Missing emitter '${output.prop}' on component '${getTypeName(this.componentFactory.componentType)}'!`);\n    }\n  }\n\n  registerCleanup() {\n    const destroyComponentRef = this.wrapCallback(() => this.componentRef.destroy());\n    let destroyed = false;\n\n    this.element.on !('$destroy', () => this.componentScope.$destroy());\n    this.componentScope.$on('$destroy', () => {\n      if (!destroyed) {\n        destroyed = true;\n        this.componentRef.injector.get(TestabilityRegistry)\n            .unregisterApplication(this.componentRef.location.nativeElement);\n        destroyComponentRef();\n      }\n    });\n  }\n\n  getInjector(): Injector { return this.componentRef.injector; }\n\n  private updateInput(prop: string, prevValue: any, currValue: any) {\n    if (this.implementsOnChanges) {\n      this.inputChanges[prop] = new SimpleChange(prevValue, currValue, prevValue === currValue);\n    }\n\n    this.inputChangeCount++;\n    this.component[prop] = currValue;\n  }\n\n  groupProjectableNodes() {\n    let ngContentSelectors = this.componentFactory.ngContentSelectors;\n    return groupNodesBySelector(ngContentSelectors, this.element.contents !());\n  }\n}\n\n/**\n * Group a set of DOM nodes into `ngContent` groups, based on the given content selectors.\n */\nexport function groupNodesBySelector(ngContentSelectors: string[], nodes: Node[]): Node[][] {\n  const projectableNodes: Node[][] = [];\n  let wildcardNgContentIndex: number;\n\n  for (let i = 0, ii = ngContentSelectors.length; i < ii; ++i) {\n    projectableNodes[i] = [];\n  }\n\n  for (let j = 0, jj = nodes.length; j < jj; ++j) {\n    const node = nodes[j];\n    const ngContentIndex = findMatchingNgContentIndex(node, ngContentSelectors);\n    if (ngContentIndex != null) {\n      projectableNodes[ngContentIndex].push(node);\n    }\n  }\n\n  return projectableNodes;\n}\n\nfunction findMatchingNgContentIndex(element: any, ngContentSelectors: string[]): number|null {\n  const ngContentIndices: number[] = [];\n  let wildcardNgContentIndex: number = -1;\n  for (let i = 0; i < ngContentSelectors.length; i++) {\n    const selector = ngContentSelectors[i];\n    if (selector === '*') {\n      wildcardNgContentIndex = i;\n    } else {\n      if (matchesSelector(element, selector)) {\n        ngContentIndices.push(i);\n      }\n    }\n  }\n  ngContentIndices.sort();\n\n  if (wildcardNgContentIndex !== -1) {\n    ngContentIndices.push(wildcardNgContentIndex);\n  }\n  return ngContentIndices.length ? ngContentIndices[0] : null;\n}\n\nlet _matches: (this: any, selector: string) => boolean;\n\nfunction matchesSelector(el: any, selector: string): boolean {\n  if (!_matches) {\n    const elProto = <any>Element.prototype;\n    _matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n        elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n  }\n  return el.nodeType === Node.ELEMENT_NODE ? _matches.call(el, selector) : false;\n}\n"]}